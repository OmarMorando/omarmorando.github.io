<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Omar Morando</title>
        <link>https://www.omarmorando.com/posts/</link>
        <description>Recent content in Posts on Omar Morando</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
        <lastBuildDate>Fri, 22 Apr 2022 15:09:35 +0200</lastBuildDate>
        <atom:link href="https://www.omarmorando.com/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Modulo SCADAsploit: Modbus Payload Transfer</title>
            <link>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-payload-transfer/</link>
            <pubDate>Fri, 22 Apr 2022 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-payload-transfer/</guid>
            <description>Il secondo modulo che andiamo ad esplorare si chiama &amp;ldquo;Modbus Payload Transfer&amp;rdquo; e appartiene alla categoria degli auxiliary.
A cosa serve Il modulo &amp;ldquo;Modbus Payload Transfer&amp;rdquo; è uno script che permette di memorizzare e recuperare un payload/shellcode negli &amp;ldquo;holding registers&amp;rdquo; di un PLC tramite il protocollo Modbus TCP. Esistono numerosissimi PLC esposti a Internet, con questo modulo è possibile sfruttare la loro memoria per fare un upload di un payload (shellcode/malware) in modo che possa essere recuperato in un secondo momento.</description>
            <content type="html"><![CDATA[<p>Il secondo modulo che andiamo ad esplorare si chiama &ldquo;<strong>Modbus Payload Transfer</strong>&rdquo; e appartiene alla categoria degli auxiliary.</p>
<h2 id="a-cosa-serve">A cosa serve</h2>
<p>Il modulo &ldquo;<strong>Modbus Payload Transfer</strong>&rdquo; è uno script che permette di memorizzare e recuperare un payload/shellcode negli &ldquo;holding registers&rdquo; di un PLC tramite il protocollo Modbus TCP. Esistono numerosissimi PLC esposti a Internet, con questo modulo è possibile sfruttare la loro memoria per fare un upload di un payload (shellcode/malware) in modo che possa essere recuperato in un secondo momento.</p>
<p>Uno scenario di utilizzo potrebbe prevedere i seguenti steps:</p>
<ol>
<li>Un attaccante individua un PLC esposto su Internet con spazio sufficiente per memorizzare un determinato payload.</li>
<li>L&rsquo;attaccante carica il payload nella memoria del PLC.</li>
<li>L&rsquo;attaccante infetta un host in grado di comunicare in Modbus TCP recuperando il payload dal PLC per poi eseguirlo.</li>
</ol>
<p>La stessa cosa ovviamente potrebbe avvenire anche con un PLC non esposto su Internet ma presente in una rete locale. I principali vantaggi di questo metodo sono:</p>
<ol>
<li>L&rsquo;uso di PLC di terze parti fornisce l&rsquo;anonimato e rende difficile la tracciabilità. Non è necessario caricare il payload su un server.</li>
<li>Il payload è archiviato nella memoria del PLC, rendendo difficile l&rsquo;analisi forense. Inoltre, una volta recuperato il payload il suo contenuto potrebbe essere sovrascritto facilmente (anche dall&rsquo;host stesso).</li>
</ol>
<p>Questo approccio potrebbe essere utile anche in alcuni ambienti ICS in cui protocolli diversi da Modbus potrebbero mettere in allerta sistemi IDS/IPS. In un contesto di questo tipo hai solo bisogno di un device Modbus o anche semplicemente di un emulatore che può fungere da server quando il target host si connette ad esso. Esistono poi dei PLC direttamente esposti in Internet e gestiti da remoto che possono diventare un buon posto dove despositare un payload/malware.</p>
<p><strong>Nota importante</strong>: non eseguire nessuna di queste azioni su PLC di terze parti. Qualsiasi scrittura sui registri dei PLC può interrompere la strategia di controllo del processo per cui è stata programmata.</p>
<h2 id="come-funziona">Come funziona</h2>
<p>Per prima cosa possiamo cercare il modulo interessato usando il comando <code>search modbus</code>, che presenterà l&rsquo;elenco dei moduli ausiliari e gli exploits che fanno uso di questo protocollo. Una volta individuato ciò che cerchiamo lo selezioniamo col comando <code>use auxiliary/modbus/modbus_payload_transfer</code>. Il comando <code>show info</code> ci fornisce alcuni dettagli sul funzionamento del modulo.</p>
<p><img src="/uploads/2021/scadasploit_payload_1.png" alt=""></p>
<p>A questo punto passiamo a configurare il modulo. Il comando <code>show options</code> visualizza la lista dei parametri, in questo caso troviamo:</p>
<ul>
<li>ADDRESS: indirizzo di partenza dell&rsquo;holding register per l&rsquo;upload/download del payload</li>
<li>FILENAME: il nostro file contenente il payload (si raccomandano dimensioni di qualche Kb)</li>
<li>MODE: per selezionare se eseguire un upload o un download dal PLC</li>
<li>NBYTES: il numero di bytes che dobbiamo scaricare durante un download (non necessario per l&rsquo;upload)</li>
<li>RHOST ed RPORT per impostare l&rsquo;indirizzo IP e la porta TCP del nostro PLC</li>
</ul>
<p><img src="/uploads/2021/scadasploit_payload_2.png" alt=""></p>
<p>Quando abbiamo configurato correttamente la lista dei parametri non ci resta che eseguire il nostro modulo ausiliario, usando il comando <code>run</code>. In questo caso stiamo eseguendo un upload di un file chiamato <code>payload.bin</code> della dimensione di 300 bytes, su un PLC con indirizzo 10.43.10.58 a partire dall&rsquo;holding register 200.</p>
<p><img src="/uploads/2021/scadasploit_payload_3.png" alt=""></p>
<p>Per la caratteristica del protocollo Modbus il file viene suddiviso in pacchetti da 250 bytes. Se il payload ha un numero dispari di byte verrà aggiunto un carattere &ldquo;0x90&rdquo; per evitare problemi durante il recupero.</p>
<p>A seconda del tipo di PLC in uso avremo a disposizione una quantità maggiore o minore di memoria accessibile, pertanto lo script verificherà prima che vi sia spazio sufficiente per il payload. Per verificare le dimensioni viene inviata una richiesta Modbus con un ID operazione 03 (Read Holding Register), tentando di leggere un determinato record a partire dall&rsquo;indirizzo che abbiamo impostato come parametro (ogni record è di 16 bit). Se si ottiene un&rsquo;eccezione 0x83 significa che il PLC non è in grado di contenere il nostro payload e l&rsquo;operazione fallisce.</p>
<blockquote>
<p>Il recupero del payload avviene usando lo stesso modulo &ldquo;<strong>Modbus Payload Transfer</strong>&rdquo;, andando semplicemente a selezionare la modalità MODE = DOWN e la quantità di bytes che dobbiamo scaricare tramite il parametro NBYTES.</p>
<p>Anche in questo caso il download avviene a blocchi di 250 bytes (125 holding registers) per volta. Il file viene poi ricomposto e salvato integralmente.</p>
</blockquote>
<h2 id="attenzione-alla-perdita-dei-dati">Attenzione alla perdita dei dati</h2>
<p>Oltre a utilizzare lo script per caricare un determinato payload come ad esempio un malware o una shellcode, è ovvio che può essere utilizzato anche per caricare qualsiasi tipo di file di dimensioni contenute. Penso che sia un modo interessante per esfiltrare e condividere informazioni. Chi sospetterebbe che gli holding registers di un determinato PLC  memorizzino un file .docx o .zip?</p>
<p>È importante notare che gli holding registers in cui viene caricato il payload possono essere modificati dal PLC stesso. Dato che non conosciamo la gestione della memoria e la strategia di controllo del processo è probabile che dobbiamo cercare un intervallo di memoria che non sia suscettibile di modifiche. L&rsquo;idea potrebbe essere quella di caricare il payload in una determinata sezione dei registri e quindi verificare, per qualche tempo, che il payload non subisca alcuna modifica.</p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far comprendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Modulo SCADAsploit: Modbus Scan</title>
            <link>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-scan/</link>
            <pubDate>Sun, 17 Apr 2022 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-scan/</guid>
            <description>Iniziamo a conoscere un po&amp;rsquo; meglio ScadaSploit partendo da uno dei moduli ausiliari presenti: Modbus Scan.
Posizioniamoci nella cartella dove abbiamo installato ScadaSploit e avviamolo tramite il comando $ ./scadasploit.py. Seguendo la stessa filosofia di approccio di Metasploit, possiamo cercare tutti i moduli che contengono una parola chiave usando il comando search &amp;lt;keyword&amp;gt; oppure visualizzare l&amp;rsquo;elenco completo dei moduli presenti con il comando show modules.
Nel nostro caso useremo search modbus per individuare i moduli di ScadaSploit che possono aiutarci durante il nostro lavoro di pentesting su una rete Modbus TCP.</description>
            <content type="html"><![CDATA[<p>Iniziamo a conoscere un po&rsquo; meglio ScadaSploit partendo da uno dei moduli ausiliari presenti: <strong>Modbus Scan</strong>.</p>
<p>Posizioniamoci nella cartella dove abbiamo installato ScadaSploit e avviamolo tramite il comando <code>$ ./scadasploit.py</code>. Seguendo la stessa filosofia di approccio di Metasploit, possiamo cercare tutti i moduli che contengono una parola chiave usando il comando <code>search &lt;keyword&gt;</code> oppure visualizzare l&rsquo;elenco completo dei moduli presenti con il comando <code>show modules</code>.</p>
<p>Nel nostro caso useremo <code>search modbus</code> per individuare i moduli di ScadaSploit che possono aiutarci durante il nostro lavoro di pentesting su una rete Modbus TCP.</p>
<p><img src="/uploads/2021/scadasploit_scan_1.png" alt=""></p>
<p>L&rsquo;elenco comprende sia i moduli ausiliari sia gli exploit, riconoscibili tramite la colonna &ldquo;Path&rdquo;. Per il nostro primo test decidiamo di eseguire la scansione di una rete Modbus TCP, quindi selezioniamo il modulo <strong>Modbus Scan</strong> tramite il comando <code>use auxiliary/schneider/modbus_scan</code> e visualizziamo l&rsquo;elenco dei parametri tramite il comando <code>show options</code>. Come possiamo notare il modulo appartiene alla categoria degli &ldquo;auxiliary&rdquo;.</p>
<p><img src="/uploads/2021/scadasploit_scan_2.png" alt=""></p>
<p><strong>Modbus Scan</strong> è un modulo per la scansione di dispositivi connessi a una rete Modbus TCP. Può essere utilizzato per eseguire lo scanning di tutti i devices alla ricerca di informazioni sulla scheda di comunicazione, la versione del firmware, il MAC address.</p>
<p>La scansione della rete può avvenire specificando l&rsquo;indirizzo IP di un singolo dispositivo o un range di indirizzi usando la notazione CIDR (es. 10.43.10.0/23). In alternativa, è possibile inserire il nome di un file di testo che contiene l&rsquo;elenco degli indirizzi IP degli hosts, seguendo un semplice formato che specifica l&rsquo;indirizzo e l&rsquo;eventuale porta non standard.</p>
<pre tabindex="0"><code>10.43.10.100
10.40.11.58:5020
10.0.1.1/24
</code></pre><p>Nel nostro caso facciamo lo scanning di un singolo device.</p>
<p><img src="/uploads/2021/scadasploit_scan_3.png" alt=""></p>
<p>Ed ecco che in un attimo siamo in grado di riconoscere il nostro dispositivo, la versione del firmware installato e il MAC address, tutte informazioni utili per una successiva azione di exploit.</p>
<h2 id="plc-schneider-modicon-e-umas">PLC Schneider Modicon e UMAS</h2>
<p>I PLC della serie Schneider Modicon programmati con UnityPro e basati su Unity OS a partire dalla versione 2.6 utilizzano il protocollo <strong>UMAS</strong>. Si tratta di un protocollo a livello di kernel che prevede anche un livello di controllo amministrativo.</p>
<p>La struttura di UMAS sfrutta quella del Modbus ed è un derivato del vecchio protocollo Xway utilizzato sin dalle prime serie di PLC Telemechanique. La caratteristica principale è che utilizza il codice funzione <strong>90 (0x5a)</strong> del protocollo Modbus per inviare e ricevere un set molto più ricco di informazioni. L&rsquo;impacchettamento del payload è little-endian, il che può sembrare strano dal momento che Modbus è big-endian.</p>
<p>Il pacchetto UMAS inizia con un campo a 16 bit che specifica un &ldquo;UMAS Function Subcode&rdquo;, seguito da un numero variabile di byte che compongono il payload.</p>
<p><img src="/uploads/2021/scadasploit_scan_4.png" alt=""></p>
<p>Le richieste UMAS hanno quindi una struttura di questo tipo:</p>
<pre tabindex="0"><code>[TCP Packet] [Modbus Header] [5A] [UMAS CODE (16 bit)] [UMAS PAYLOAD (Variable)]
</code></pre><p>Tutte le risposte seguono invece questo schema:</p>
<pre tabindex="0"><code>[TCP Packet] [Modbus Header] [5A] [RETURN CODE (16 bit)] [UMAS PAYLOAD (Variable)]

 0x01 0xFE - OK
 0x01 0xFD - Error
</code></pre><p>Quando un PLC Schneider riceve un pacchetto Modbus controlla se il codice funzione è 0x5A e, in tal caso, utilizza alcune librerie specifiche per la gestione dell&rsquo;estensione UMAS. Esistono diversi &ldquo;UMAS codes&rdquo; in grado di eseguire numerose operazioni sul PLC, di seguito ne elenco alcuni:</p>
<table>
<thead>
<tr>
<th>UMAS code</th>
<th>Function</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x01</td>
<td>INIT_COMM</td>
<td>Initialize a UMAS communication</td>
</tr>
<tr>
<td>0x02</td>
<td>READ_ID</td>
<td>Request a PLC ID</td>
</tr>
<tr>
<td>0x03</td>
<td>READ_PROJECT_INFO</td>
<td>Read Project Information</td>
</tr>
<tr>
<td>0x04</td>
<td>READ_PLC_INFO</td>
<td>Get internal PLC Info</td>
</tr>
<tr>
<td>0x06</td>
<td>READ_CARD_INFO</td>
<td>Get internal PLC SD-Card Info</td>
</tr>
<tr>
<td>0x0A</td>
<td>REPEAT</td>
<td>Sends back data sent to PLC (used for synchronization)</td>
</tr>
<tr>
<td>0x10</td>
<td>TAKE_PLC_RESERVATION</td>
<td>Assign an owner to the PLC</td>
</tr>
<tr>
<td>0x11</td>
<td>RELEASE_PLC_RESERVATION</td>
<td>Release the reservation of a PLC</td>
</tr>
<tr>
<td>0x12</td>
<td>KEEP_ALIVE</td>
<td>Keep alive message</td>
</tr>
<tr>
<td>0x20</td>
<td>READ_MEMORY_BLOCK</td>
<td>Read a memory block of the PLC</td>
</tr>
<tr>
<td>0x22</td>
<td>READ_VARIABLES</td>
<td>Read system bits, system words and strategy variables</td>
</tr>
<tr>
<td>0x23</td>
<td>WRITE_VARIABLES</td>
<td>Write system bits, system words and strategy variables</td>
</tr>
<tr>
<td>0x24</td>
<td>READ_COILS_REGISTERS</td>
<td>Read coils and holding registers from PLC</td>
</tr>
<tr>
<td>0x25</td>
<td>WRITE_COILS_REGISTERS</td>
<td>Write coils and holding registers into PLC</td>
</tr>
<tr>
<td>0x30</td>
<td>INITIALIZE_UPLOAD</td>
<td>Initialize strategy upload (copy from PC to PLC)</td>
</tr>
<tr>
<td>0x31</td>
<td>UPLOAD_BLOCK</td>
<td>Upload a strategy block to the PLC</td>
</tr>
<tr>
<td>0x32</td>
<td>END_STRATEGY_UPLOAD</td>
<td>Finish strategy upload</td>
</tr>
<tr>
<td>0x33</td>
<td>INITIALIZE_DOWNLOAD</td>
<td>Initialize strategy download (copy from PLC to PC)</td>
</tr>
<tr>
<td>0x34</td>
<td>DOWNLOAD_BLOCK</td>
<td>Download a strategy block from the PLC</td>
</tr>
<tr>
<td>0x35</td>
<td>END_STRATEGY_DOWNLOAD</td>
<td>Finish strategy download</td>
</tr>
<tr>
<td>0x39</td>
<td>READ_ETH_MASTER_DATA</td>
<td>Read Ethernet master data</td>
</tr>
<tr>
<td>0x40</td>
<td>START_PLC</td>
<td>Starts the PLC</td>
</tr>
<tr>
<td>0x41</td>
<td>STOP_PLC</td>
<td>Stops the PLC</td>
</tr>
<tr>
<td>0x50</td>
<td>MONITOR_PLC</td>
<td>Monitors variables, systems bits and words</td>
</tr>
<tr>
<td>0x58</td>
<td>CHECK_PLC</td>
<td>Check PLC connection status</td>
</tr>
<tr>
<td>0x70</td>
<td>READ_IO_OBJECT</td>
<td>Read IO Object</td>
</tr>
<tr>
<td>0x71</td>
<td>WRITE_IO_OBJECT</td>
<td>Write IO Object</td>
</tr>
<tr>
<td>0x73</td>
<td>GET_STATUS_MODULE</td>
<td>Get status module</td>
</tr>
</tbody>
</table>
<h2 id="modbus-scan-di-scadasploit">Modbus Scan di ScadaSploit</h2>
<p>Il modulo <strong>Modbus Scan</strong> di ScadaSploit supporta l&rsquo;estensione UMAS e questo ci permette di recuperare ulteriori dettagli quando abbiamo a che fare con un PLC programmato con UnityPro, come ad es. il nome del modulo CPU, il modello di scheda di memoria e alcuni dati sul file di progetto che è stato caricato.</p>
<p>La natura del protocollo Modbus che non prevede alcuna autenticazione facilita il gathering delle informazioni.</p>
<p><img src="/uploads/2021/scadasploit_scan_5.png" alt="Scanning di un PLC Modicon M580"></p>
<p>Come possiamo vedere, oltre ai dati standard siamo in grado di raccogliere dettagli importanti anche sul progetto. Facendo un esempio pratico di come utilizzare queste informazioni, la data dell&rsquo;ultima modifica ci fa capire da quando tempo il PLC è in funzione senza interventi di manutenzione al software. Questo può voler dire che potrebbe essere esposto a vulnerabilità note riscontrate in data successiva e che magari non sono state affrontate.</p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far comprendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>SCADAsploit Framework</title>
            <link>https://www.omarmorando.com/posts/2022/04/scadasploit-framework/</link>
            <pubDate>Thu, 14 Apr 2022 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2022/04/scadasploit-framework/</guid>
            <description>Questa sezione è dedicata a SCADAsploit, un framework su cui sto lavorando dedicato al penetration testing in ambito OT/ICS. Vi chiederete: &amp;ldquo;Ma non c&amp;rsquo;è già Metasploit che lo fa?&amp;rdquo;. Certo! E allora che bisogno c&amp;rsquo;è di creare un nuovo tool del genere? Provo a dare qualche risposta:
framework esclusivamente dedicato alle vulnerabilità di SCADA, PLC e altri dispositivi ICS scritto in Python, sia il core del framework sia i moduli aggiuntivi interfaccia &amp;ldquo;Metasploit like&amp;rdquo; basata su Sploitkit focus maggiore su parco PLC installato, specialmente europeo open source.</description>
            <content type="html"><![CDATA[<p>Questa sezione è dedicata a <strong>SCADAsploit</strong>, un framework su cui sto lavorando dedicato al penetration testing in ambito OT/ICS. Vi chiederete: &ldquo;Ma non c&rsquo;è già Metasploit che lo fa?&rdquo;. Certo! E allora che bisogno c&rsquo;è di creare un nuovo tool del genere? Provo a dare qualche risposta:</p>
<ul>
<li>framework esclusivamente dedicato alle vulnerabilità di SCADA, PLC e altri dispositivi ICS</li>
<li>scritto in Python, sia il core del framework sia i moduli aggiuntivi</li>
<li>interfaccia &ldquo;Metasploit like&rdquo; basata su <a href="https://pypi.org/project/sploitkit/">Sploitkit</a></li>
<li>focus maggiore su parco PLC installato, specialmente europeo</li>
<li>open source.</li>
</ul>
<p>Non so se questi punti siano sufficienti a dare maggior senso al progetto, per me è stato così. Volevo raccogliere in un unico ambiente gli scripts che comunemente vengono utilizzati durante i pentest in automazione, e casualmente ho intercettato Sploitkit. </p>
<p>Metasploit attualmente conta quasi 70 moduli dedicati ai sistemi ICS, ma la maggior parter di essi sono per dispositivi praticamente inesistenti sul mercato italiano. Se consideriamo il parco dei PLC installato in Italia negli ultimi 20 anni, troviamo che Siemens + Schneider Electric ne fanno da padrone con quasi i 2/3 delle parti di mercato. Seguono Rockwell Automation (ex Allen-Bradley), GE, Omron soprattutto sulle macchine utensili, qualche Phoenix e Wago e poi pochi altri.</p>
<p>Da qui è nata l&rsquo;idea di SCADAsploit, un database di moduli ausiliari e di exploit dedicati ai principali produttori e protocolli di comunicazione, che faciliti le fasi di pentest. L&rsquo;uso di Python lo rende probabilmente più accessibile anche a scopo didattico.</p>
<p><img src="/uploads/2021/scadasploit_1.png" alt=""></p>
<h2 id="principali-moduli-attualmente-presenti">Principali moduli attualmente presenti</h2>
<p>Seguendo la stessa filosofia di approccio di Metasploit, anche in SCADAsploit troviamo due categorie di moduli: &ldquo;auxiliary&rdquo; ed &ldquo;exploit&rdquo;. I moduli ausiliari sono dedicati ad operazioni di ricognizione, scanning, lettura/scrittura di dati ecc., mentre gli exploit basano il loro comportamento sullo sfruttamente di una vulnerabilità.</p>
<p>In entrambe le categorie troviamo un&rsquo;ulteriore suddivisione in funzione dei diversi produttori di PLC, che al momento si limitano a Schneider Electric e Siemens.</p>
<p><img src="/uploads/2021/scadasploit_2.png" alt=""></p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: attacco tipo Stuxnet a un PLC Modicon</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-attacco-tipo-stuxnet-a-un-plc-modicon/</link>
            <pubDate>Sun, 11 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-attacco-tipo-stuxnet-a-un-plc-modicon/</guid>
            <description>I ricercatori di Airbus CyberSecurity hanno recentemente dimostrato che gli hacker potrebbero lanciare un attacco in stile Stuxnet contro i controllori logici programmabili (PLC) Modicon di Schneider Electric, ma si ritiene che anche i prodotti di altri fornitori potrebbero essere vulnerabili allo stesso tipo di attacco.
Come funziona Il famigerato malware Stuxnet, che gli Stati Uniti e Israele usavano per danneggiare il programma nucleare iraniano, è stato progettato per colpire i PLC SIMATIC S7-300 e S7-400 prodotti da Siemens.</description>
            <content type="html"><![CDATA[<p>I ricercatori di <a href="https://airbus-cyber-security.com/applying-a-stuxnet-type-attack-to-a-modicon-plc/">Airbus CyberSecurity</a> hanno recentemente dimostrato che gli hacker potrebbero lanciare un attacco in stile Stuxnet contro i controllori logici programmabili (PLC) Modicon di Schneider Electric, ma si ritiene che anche i prodotti di altri fornitori potrebbero essere vulnerabili allo stesso tipo di attacco.</p>
<h2 id="come-funziona">Come funziona</h2>
<p>Il famigerato malware <a href="https://blog.omarmorando.com/hacking/ot-ics-hacking/hacking-attaccare-un-plc-con-stuxnet">Stuxnet</a>, che gli Stati Uniti e Israele usavano per danneggiare il programma nucleare iraniano, è stato progettato per colpire i PLC SIMATIC S7-300 e S7-400 prodotti da Siemens. Stuxnet ha caricato codice dannoso su PLC mirati abusando del software STEP7 di Siemens, fornito dal colosso industriale tedesco per programmare i controller.</p>
<p><img src="/uploads/2021/stuxnet_schneider_1.png" alt=""></p>
<p>Come ho descritto nell&rsquo;articolo precedente, Stuxnet ha sostituito una libreria denominata s7otbxdx.dll, che STEP7 utilizza per accedere a un PLC, con una versione dannosa usando un metodo chiamato &ldquo;<strong>reflective DLL loading</strong>&rdquo;. Questa tecnica prevede di rinominare la DLL interessata (es. asmArm.dll) con un altro nome (es. asm_Arm.dll) e di creare una seconda DLL con il nome di quella originale (asmArm.dll) che, a sua volta, richiama le funzioni della prima. Ciò ha consentito agli aggressori di iniettare il loro codice dannoso nel controller di destinazione.</p>
<p><img src="/uploads/2021/stuxnet_schneider_2.png" alt=""></p>
<p>I ricercatori di Airbus CyberSecurity hanno analizzato il PLC Modicon M340 di Schneider Electric per determinare se è vulnerabile ad attacchi simili. L&rsquo;attacco ha preso di mira il controller tramite il software di ingegneria Schneider EcoStruxure Control Expert, precedentemente noto come Unity Pro.</p>
<p>La loro analisi ha portato alla scoperta di una vulnerabilità che può essere sfruttata per caricare codice dannoso sui PLC Modicon M340 e M580 sostituendo uno dei file DLL associati al software di ingegneria, seguendo lo stesso schema di Stuxnet.</p>
<p><img src="/uploads/2021/stuxnet_schneider_3.png" alt=""></p>
<p>&ldquo;Un simile attacco potrebbe avere gravi conseguenze, tra cui l&rsquo;interruzione dei processi di produzione o altri tipi di danni&rdquo;, ha dichiarato Airbus CyberSecurity.</p>
<p>&ldquo;Ancora più interessante dal punto di vista IT, l&rsquo;attaccante potrebbe trasformare il PLC in un proxy&rdquo;, hanno spiegato i ricercatori di Airbus. “Ciò gli consentirebbe di inviare richieste e comunicare con la rete a cui è collegato il PLC. Ad esempio, potrebbe accedere alla rete aziendale interna per rubare la proprietà intellettuale o lanciare attacchi per colpire altri sistemi connessi&quot;.</p>
<p>&ldquo;Il legittimo software di automazione sarebbe in esecuzione senza mostrare alcun segno della presenza di un programma dannoso. La parte malware invia periodicamente richieste a un server di comando e controllo gestito dall&rsquo;aggressore via Internet&rdquo;, hanno spiegato.</p>
<h2 id="come-portare-lattacco">Come portare l&rsquo;attacco</h2>
<p>Mentre un simile attacco potrebbe essere altamente dannoso o dirompente - o potrebbe dare un vantaggio all&rsquo;attaccante - lo sfruttamento della vulnerabilità non è un compito facile. L&rsquo;hacker deve prima ottenere l&rsquo;accesso al perimetro ICS dell&rsquo;organizzazione target ed essere in grado di comunicare con il PLC target.</p>
<p>&ldquo;Questa è già un&rsquo;operazione molto significativa che probabilmente implica l&rsquo;accesso privilegiato su un numero di macchine. Se gli aggressori hanno raggiunto questo punto, diverse misure di difesa di sicurezza non sono in atto o hanno fallito ”, hanno osservato i ricercatori di Airbus CyberSecurity.</p>
<p>L&rsquo;utente malintenzionato deve quindi scaricare il programma di automazione dal PLC. Questo può essere fatto da una stazione di ingegneria compromessa o se il PLC è accessibile a qualsiasi macchina sulla rete senza autenticazione. L&rsquo;autore dell&rsquo;attacco deve quindi ricompilare il programma di automazione utilizzando le tecniche descritte dai ricercatori Airbus e creare un programma dannoso da incorporare nel legittimo software di automazione.</p>
<p>Infine, l&rsquo;attaccante deve caricare il programma modificato sul PLC ed eseguirlo, ma ciò richiede l&rsquo;arresto e l&rsquo;avvio del software di automazione e gli esperti affermano che questa operazione potrebbe essere notata.</p>
<h2 id="le-soluzioni-in-atto">Le soluzioni in atto</h2>
<p>La vulnerabilità scoperta dai ricercatori Airbus nei prodotti Schneider Electric viene indicata come <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7475">CVE-2020-7475</a> e classificata come severa. È stata patchata dalla società con un aggiornamento rapido per EcoStruxure Control Expert e aggiornamenti del firmware per i controller Modicon M340 e M580, come indicato in <a href="https://www.se.com/ww/en/download/document/SEVD-2020-080-01/">questa nota</a>.</p>
<p>Schneider Electric e Airbus incoraggiano tutte le aziende clienti a implementare le migliori pratiche di cybersicurezza in tutte le loro operazioni nel tentativo di ridurre il rischio di attacchi.</p>
<p>&ldquo;Se necessario, ciò include la localizzazione di sistemi industriali e dispositivi accessibili in remoto dietro i firewall; installazione di controlli fisici per impedire accessi non autorizzati; impedire l&rsquo;accesso a sistemi e dispositivi mission-critical da reti esterne; applicazione sistematica di patch di sicurezza e attivazione di software antivirus; e l&rsquo;applicazione di soluzioni di whitelisting &ldquo;, ha detto Schneider.</p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far com‌prendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: Pentest con un PLC</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-pentest-con-un-plc/</link>
            <pubDate>Sat, 10 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-pentest-con-un-plc/</guid>
            <description>Penetration Test con un PLC La protezione di un ambiente ICS, inclusi i PLC, non è banale, poiché questi sistemi non sono progettati per essere resistenti ad attacchi cyber. Ciò significa che bisogna in qualche modo integrare le misure di resilienza della cybersicurezza all&amp;rsquo;interno e intorno all&amp;rsquo;ICS. Tali misure includono, ad esempio:
la difesa perimetrale come i firewall per ridurre il rischio di traffico di rete indesiderato; il monitoraggio della rete e preferibilmente di tipo non intrusivo, specifico per ICS, basato su anomalie in modo da non creare alcun carico aggiuntivo sulle reti ICS; ultimo ma non meno importante, la protezione e il monitoraggio degli endpoint per ridurre l&amp;rsquo;esposizione dei PLC agli attacchi tramite connessioni remote.</description>
            <content type="html"><![CDATA[<h2 id="penetration-test-con-un-plc">Penetration Test con un PLC</h2>
<p>La protezione di un ambiente ICS, inclusi i PLC, non è banale, poiché questi sistemi non sono progettati per essere resistenti ad attacchi cyber. Ciò significa che bisogna in qualche modo integrare le misure di resilienza della cybersicurezza all&rsquo;interno e intorno all&rsquo;ICS. Tali misure includono, ad esempio:</p>
<ul>
<li>la difesa perimetrale come i firewall per ridurre il rischio di traffico di rete indesiderato;</li>
<li>il monitoraggio della rete e preferibilmente di tipo non intrusivo, specifico per ICS, basato su anomalie in modo da non creare alcun carico aggiuntivo sulle reti ICS;</li>
<li>ultimo ma non meno importante, la protezione e il monitoraggio degli endpoint per ridurre l&rsquo;esposizione dei PLC agli attacchi tramite connessioni remote.</li>
</ul>
<p>Ma un altro aspetto molto importante è identificare e comprendere i rischi. <strong>Quali sono le superfici di attacco, i metodi attuati, le vulnerabilità e le potenziali conseguenze?</strong> Inoltre, è importante valutare e rivalutare continuamente la probabilità di potenziali attacchi.</p>
<p><img src="/uploads/2021/pt_1.png" alt=""></p>
<p>Un metodo per ottenere informazioni dettagliate sull&rsquo;esposizione al rischio è il <strong>test di penetrazione</strong>, il cui l&rsquo;obiettivo è identificare i vettori di attacco e simulare un vero e proprio attacco al sistema, controllato e consapevole. Tuttavia, i test di penetrazione in un ambiente ICS richiedono un approccio attento significativamente diverso rispetto alle tecniche di test di penetrazione standard per i sistemi IT. I sistemi ICS contengono apparecchiature delicate, come i PLC, dodate di un&rsquo;unità di elaborazione sensibile, che può causare congelamenti, ripristini della configurazione e guasti se sollecitati a causa della bassa gestione dello stack.</p>
<p>Test di penetrazione standard come una semplice scansione delle porte eseguita da strumenti come Nmap potrebbero essere sufficienti per sovraccaricare l&rsquo;unità di elaborazione. A causa della debole gestione dello stack di rete, alcuni dispositivi non sono in grado di sopportare il numero di pacchetti di rete generati da Nmap e strumenti simili. Pertanto, è consigliabile non eseguire test di penetrazione in un ambiente ICS live, ma eseguirli solo in un ambiente di laboratorio controllato o durante fermi macchina programmati.</p>
<p>Ci sono molte metodologie di test di penetrazione tra cui scegliere, anche se poche su misura per ICS. Una metodologia compatibile con ICS è la metodologia &ldquo;<strong>zero entry</strong>&rdquo; per i test di penetrazione. Essa comprende quattro fasi: <strong>reconnaissance, scanning, exploitation e post-exploitation</strong>.</p>
<p>Il post-exploitation potrebbe comportare il mantenimento dell&rsquo;accesso al sistema, che è ciò che fa un APT quando stabilisce un percorso per la comunicazione del centro di controllo e comando, che viene utilizzato per inviare informazioni di intelligence sul sistema di destinazione e per caricare nuovi exploit/malware. Inoltre, coprire le tracce per nascondere i passi dell&rsquo;attacco rappresenta il ​​quinto step.</p>
<p>La reconnaissance si concentra sulla raccolta di informazioni sulla destinazione, come ad esempio l&rsquo;indirizzo IP e i record DNS (Domain Name System) e la lettura delle vulnerabilità comuni per i PLC di destinazione. Lo scanning prevede la scansione attiva del target alla ricerca di porte aperte, il rilevamento del sistema operativo e l&rsquo;esecuzione dei servizi.</p>
<p>Nmap, incluso Nmap Script Engine (NSE), è un esempio di uno strumento che viene spesso utilizzato per la scansione. Nel caso in cui venga rilevata una vulnerabilità, la fase di attacco passa all&rsquo;exploitation. Nella maggior parte dei casi, tali vulnerabilità vengono utilizzate per ottenere l&rsquo;accesso al sistema attraverso diversi servizi in esecuzione sul PLC. Dopo aver sfruttaSploitkitto la vulnerabilità, è preferibile rendere persistente l&rsquo;accesso. Tuttavia, non tutti i servizi offrono l&rsquo;opportunità di creare una backdoor persistente.</p>
<p>Per molti PLC, è possibile estrarre dettagli sul sistema usando una scansione Nmap controllata verso il PLC stesso. Questo deve essere eseguito con cura per evitare di interromperne il funzionamento. Abbiamo una configurazione di laboratorio in cui eseguiamo test di penetrazione controllata su PLC e altre apparecchiature ICS, appartenenti a diversi produttori al fine di avere un campione rappresentativo di quanto presente sul mercato.</p>
<p>In uno dei test di penetrazione la scansione Nmap con l&rsquo;uso di script in Nmap Script Engine (NSE) ha rivelato l&rsquo;indirizzo MAC, le informazioni hardware e firmware, le porte aperte 80, 102 e 443 e altro ancora. Queste informazioni dettagliate possono essere utilizzate per sviluppare exploit e indagare le vulnerabilità verso le serie PLC specifiche.</p>
<p><img src="/uploads/2021/pt_2.jpg" alt=""></p>
<p>Molte di queste vulnerabilità sono segnalate e discusse nel National Vulnerability Database. Sfruttando la loro presenza in molti casi è possibile decifrare la password e ottenere l&rsquo;accesso al PLC (e spegnerlo).</p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far com‌prendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: attaccare un PLC con Stuxnet</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-attaccare-un-plc-con-stuxnet/</link>
            <pubDate>Fri, 09 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-attaccare-un-plc-con-stuxnet/</guid>
            <description>Per illustrare come sia possibile attaccare un PLC e quali potrebbero essere le conseguenze di ciò diamo un&amp;rsquo;occhiata al worm Stuxnet.;
Introduzione a Stuxnet Stuxnet è un worm indipendente, destinato esclusivamente ai sistemi di controllo di supervisione e acquisizione dati (SCADA) di Siemens. Il worm è stato progettato per attaccare specifici PLC Siemens e ha sfruttato quattro vulnerabilità 0-day. La versione finale di Stuxnet è stata scoperta per la prima volta in Bielorussia nel giugno 2010 da Sergey Ulasen di Kaspersky Labs.</description>
            <content type="html"><![CDATA[<p>Per illustrare come sia possibile attaccare un PLC e quali potrebbero essere le conseguenze di ciò diamo un&rsquo;occhiata al worm <a href="https://en.wikipedia.org/wiki/Stuxnet">Stuxnet</a>.;</p>
<p><img src="/uploads/2021/stuxnet_1.jpg" alt=""></p>
<h2 id="introduzione-a-stuxnet">Introduzione a Stuxnet</h2>
<p>Stuxnet è un worm indipendente, destinato esclusivamente ai sistemi di controllo di supervisione e acquisizione dati (SCADA) di Siemens. Il worm è stato progettato per attaccare specifici PLC Siemens e ha sfruttato quattro vulnerabilità 0-day. La versione finale di Stuxnet è stata scoperta per la prima volta in Bielorussia nel giugno 2010 da <a href="https://eugene.kaspersky.com/2011/11/02/the-man-who-found-stuxnet-sergey-ulasen-in-the-spotlight/">Sergey Ulasen</a> di Kaspersky Labs. Una versione precedente di Stuxnet era già stata scoperta nel 2009. Tuttavia, il worm è stato sviluppato molto prima, probabilmente già nel 2005. Stuxnet è stato progettato principalmente per danneggiare una centrale nucleare situata a Natanz, in Iran. Sfortunatamente però Stuxnet si è diffuso in oltre 115 paesi, il che dimostra come anche un attacco mirato potrebbe diffondersi e causare danni al di fuori del suo scopo principale.</p>
<p>Il worm è stato appositamente progettato per modificare la velocità del rotore delle centrifughe all&rsquo;interno della centrale nucleare di Natanz, causandone l&rsquo;esplosione. Ciò che è interessante con Stuxnet è che si trattava di un worm mirato, progettato con cura per causare danni solo se fossero stati soddisfatti determinati criteri, il che significa che la maggior parte degli impianti in cui si è successivamente diffuso non avrebbero dovuto subire danni. In effetti, Stuxnet aumenterebbe la velocità del rotore delle centrifughe solo se l&rsquo;architettura del sistema di controllo industriale corrispondesse all&rsquo;impianto nucleare di Natanz. Per la sua struttura e complessità, Stuxnet è stata definita come una minaccia persistente avanzata (APT). Un APT raccoglie i dati ed esegue i comandi continuamente per un lungo periodo di tempo senza essere rilevato. Questo è anche noto come attacco &ldquo;basso e lento&rdquo;.</p>
<h2 id="come-funziona">Come funziona</h2>
<p>Il worm Stuxnet è stato portato nella struttura di Natanz attraverso un&rsquo;unità flash USB, consentendogli di attaccare il sistema dall&rsquo;interno. Ciò era considerato uno dei prerequisiti per l&rsquo;attacco in quanto la struttura di Natanz non era direttamente accessibile da Internet ma potretto tramite air gap.</p>
<p><img src="/uploads/2021/stuxnet_2.png" alt="Un PLC Simatic S7-300"></p>
<p>Dopo l&rsquo;esecuzione, il worm si è diffuso su tutta la rete fino a quando non ha trovato un sistema operativo Windows con STEP 7. </p>
<p><img src="/uploads/2021/stuxnet_3.png" alt="Siemens Step 7"></p>
<p>STEP 7 è il software di programmazione Siemens progettato per i propri PLC. Il computer che esegue STEP 7 è noto come computer di controllo e interagisce direttamente con e invia comandi al PLC. Una volta arrivato con successo al computer di controllo STEP 7, Stuxnet ha manipolato i blocchi di codice inviati dal computer di controllo, eseguito comandi pericolosi sul PLC e fatto girare le centrifughe a una frequenza superiore rispetto a quanto inizialmente programmato. </p>
<p>{% hint style=&ldquo;info&rdquo; %}
Il software STEP 7 utilizza una libreria chiamata <strong>s7otbxdx.dll</strong> per eseguire la comunicazione con il PLC. Ad esempio, se un blocco di codice deve essere letto dal PLC viene chiamata la routine &ldquo;s7blk_read&rdquo;. Stuxnet usa una tecnica di DLL hijacking per intercettare tutti i comandi provenienti da STEP 7 e WinCC (il sistema SCADA di Siemens) e, a sua volta, li inoltra alla libreria originale dopo averne modificato il contenuto. In questo modo invia comandi imprevisti al PLC restituendo agli utenti un loop di valori di funzionamento normale.
{% endhint %}</p>
<p><img src="/uploads/2021/stuxnet_4.png" alt="L&rsquo;attacco di tipo DLL hijacking sulle librerie STEP 7"></p>
<p>Gli attacchi al PLC sono stati eseguiti ogni 27 giorni circa per rendere l&rsquo;attacco furtivo e difficile da rilevare, che rappresenta una parte centrale di un APT. Stuxnet ha inoltre rilevato il computer di controllo e visualizzato un output falso sul software STEP 7. Questo passaggio dell&rsquo;attacco era una parte fondamentale nota come &ldquo;inganno&rdquo;. Gli ingegneri situati nella centrale nucleare non hanno ricevuto alcuna indicazione di errori, supponendo che le centrifughe stessero ruotando alla frequenza corretta. Ricevendo un output falso in STEP 7, essi presumevano che il tracollo fosse stato causato da un errore umano anzichè da un malware. Stuxnet ha anche nascosto il codice direttamente sul PLC dopo l&rsquo;infezione ed è stato quindi definito anche un rootkit del PLC.</p>
<p><img src="/uploads/2021/stuxnet_5.png" alt="Un esempio di sistema SCADA basato su Siemens WinCC"></p>
<p>Per la sua diffusione in rete Stuxnet ha sfruttato una delle vulnerabilità 0-day dei sistemi operativi Windows. Esso infatti si è diffuso attraverso il protocollo di condivisione dei file Server Message Block (SMB) come documentato nel rapporto sulla vulnerabilità <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250">CVE-2008-4250</a> nel National Vulnerability Database. La vulnerabilità ha consentito l&rsquo;esecuzione di codice in modalità remota, diffondendosi in modo aggressivo sulla rete locale. Il worm aveva diverse altre funzionalità, come l&rsquo;auto-replica, si aggiornava usando un centro di comando e controllo, conteneva un rootkit di Windows che nascondeva i suoi file binari e tentava di aggirare i sistemi di sicurezza presenti sui computer (anti-virus e anti-malware).</p>
<h2 id="le-conseguenze-del-suo-attacco">Le conseguenze del suo attacco</h2>
<p>Stuxnet è conosciuta come la prima arma digitale del mondo e ha distrutto circa 1.000 centrifughe all&rsquo;interno della centrale di Natanz. Gli attacchi informatici che causano danni fisici hanno rivoluzionato il modo in cui gli esperti di sicurezza informatica eseguono l&rsquo;analisi delle minacce, nonché il modo in cui i produttori di PLC li progettano.</p>
<p>Se vogliamo trovargli un merito, Stuxnet ha spazzato via la convinzione che i sistemi ICS fossero inviolabili, sicuri perchè isolati e perchè così diversi dai tradizionali dispositivi presenti nel mondo IT.</p>
<p>Ma la conseguenza più grande è determinata dal fatto che per la prima volta un ente governativo, in questo caso quello americano insieme a quello israeliano, ha creato un&rsquo;arma informatica in grado di causare danni a persone e cose. Non si era ancora visto qualcosa del genere e di questa entità, hackers e malwares avevano finora l&rsquo;obiettivo di estorcere denaro, rubare informazioni o infrangere barriere politiche, ma nessuno aveva superato la soglia del danno tangibile.</p>
<h2 id="hacking-di-un-plc">Hacking di un PLC</h2>
<p>Una parte di Stuxnet consisteva nell&rsquo;utilizzare i PLC di destinazione come strumento hacker mediante un rootkit del PLC e manipolando la comunicazione tra il computer di controllo (SCADA) e il PLC stesso. Mirando entrambi questi dispositivi Stuxnet è riuscito a raggiungere il suo obiettivo e allo stesso tempo ha ingannato gli operatori, avendo così abbastanza tempo per distruggere le centrifughe. Stuxnet come APT è un attacco sofisticato che richiede una significativa raccolta di informazioni e risorse per essere eseguito. È inoltre necessario disporre di conoscenze approfondite sui protocolli di comunicazione proprietari in uso e sull&rsquo;architettura dei PLC target, in particolare per la realizzazione del rootkit. Il suo codice è ora pubblicamente disponibile e può essere studiato in modo approfondito.</p>
<p>Un sistema di controllo industriale (ICS) e un PLC fanno uso di più protocolli di comunicazione. Tra i più utilizzati troviamo <a href="hacking-profibus-profinet.md">Profinet, Profibus</a> e <a href="hacking-modbus.md">Modbus</a>. La maggior parte di essi sono stati concepiti all&rsquo;origine senza misure di sicurezza integrate, con la conseguenza di permettere l&rsquo;esecuzione di codice in modalità remota, lo sniffing dei pacchetti e gli attacchi replay a causa della mancanza di autenticazione e crittografia.</p>
<p>Profinet utilizza l&rsquo;hardware Ethernet tradizionale, che lo rende compatibile con la maggior parte delle apparecchiature. Profinet è ampiamente utilizzato nel settore dell&rsquo;automazione e il suo design si basa sul modello Open Systems Interconnection (OSI). Profinet consente la comunicazione bidirezionale ed è il protocollo di comunicazione preferito per i PLC Siemens Simatic.</p>
<p><img src="/uploads/2021/stuxnet_6.png" alt=""></p>
<p>Profibus è uno standard di comunicazione internazionale per bus di campo. Viene utilizzato per collegare insieme più dispositivi e consente la comunicazione bidirezionale. Esistono due tipi di Profibus: Profibus Decentralized Peripherals (DP) e Profibus Process Automation (PA). Una limitazione con Profibus è che è in grado di comunicare solo con un dispositivo alla volta. La nuova versione di Profibus è standardizzata in IEC 61158.</p>
<p>Modbus è un protocollo di comunicazione seriale progettato e pubblicato da Modicon (Schneider Electric) nel 1979. Modbus esegue una comunicazione di tipo master e slave, con un numero massimo di dispositivi fino a 247. Il computer di controllo - HMI o SCADA - normalmente funge da master, mentre i dispositivi di automazione, o i PLC, sono gli slave. È stato originariamente progettato come protocollo di comunicazione per PLC e successivamente è diventato uno standard internazionale per il collegamento di più dispositivi industriali. Modbus è facile da implementare, economico e ampiamente accettato come standard di comunicazione. Esistono almeno tre varianti del protocollo Modbus: American Standard Code for Information Interchange (ASCII), unità terminale remota (RTU) e TCP/IP.</p>
<p><img src="/uploads/2021/stuxnet_7.png" alt=""></p>
<p>Esistono diversi scanner <a href="hacking-metasploit-scada-modules.md">Metasploit</a> che consentono il rilevamento e lo sfruttamento di Modbus e Profinet. Scanner simili in Python sono disponibili anche su GitHub. Nel 2011 Dillon Beresford, ingegnere senior per la ricerca delle vulnerabilità presso Dell, ha lanciato exploit remoti verso la serie di PLC Simatic di Siemens attravero Profinet, che comunica utilizzando la porta TCP 102.</p>
<p>Ciò che è interessante di questi exploit è che scaricano e visualizzano la memoria, e sono in grado di effettuare comandi ON/OFF sull&rsquo;unità centrale di elaborazione (CPU) del PLC. Un esempio è l&rsquo;exploit chiamato &ldquo;remote-memory-viewer&rdquo;, che esegue l&rsquo;autenticazione utilizzando una password backdoor codificata nel PLC Simatic S7-300 di Siemens. In questo exploit, il modulo di avvio/arresto della CPU esegue il codice shell verso il PLC e lo accende/spegne da remoto. Lo stesso exploit start/stop può essere trovato per la serie S7-1200. Inoltre, iniettando shellcode, è anche possibile ottenere l&rsquo;accesso remoto al PLC.</p>
<p>A causa della mancanza di controlli di integrità, i PLC più vecchi eseguono comandi indipendentemente dal fatto che vengano ricevuti da una fonte legittima. La ragione di ciò è che non ci sono checksum sui pacchetti di rete. È stato dimostrato che una serie di attacchi replay funziona contro un gran numero di PLC, il che consente all&rsquo;attaccante di inviare comandi di esecuzione in remoto. Pertanto, lo sfruttamento dei PLC in remoto con strumenti open source costituisce una grave minaccia per i sistemi SCADA.;</p>
<p>Durante il BlackHat USA nel 2011, Beresford ha presentato una demo live creata per le serie Siemens Simatic S7-300 e 1200. Gli exploit utilizzati durante la sua demo sono programmati in Ruby, reso compatibile con il Metasploit Framework.</p>
<p>Gli exploit remoti su ICS erano una parte essenziale del worm Stuxnet. Tuttavia, Beresford ha dimostrato come sia possibile ottenere l&rsquo;accesso remoto a un PLC utilizzando la password hardcoded integrata nel software, e per certi versi rappresenta un passo avanti rispetto a quanto fatto in Stuxnet.</p>
<h2 id="ma-succede-solo-con-siemens">Ma succede solo con Siemens?</h2>
<p>Meglio precisarlo: questo non è esclusivamente un problema di Siemens. Rockwell Automation ha anche sperimentato un buffer overflow su stack che potrebbe consentire l&rsquo;accesso remoto al sistema iniettando codice arbitrario, secondo <a href="https://nvd.nist.gov/vuln/detail/CVE-2016-0868">CVE-2016-0868</a> del National Vulnerability Database. La vulnerabilità è stata segnalata il 26 gennaio 2016 e riguardava il PLC MicroLogix 1100. Inoltre, ci sono molti altri exploit e scanner disponibili nel progetto Metasploit che possono essere utilizzati per eseguire comandi da remoto su diversi modelli di PLC.</p>
<p>Il computer di controllo può anche essere utilizzato come strumento di hacker principalmente a causa di vari exploit software, alcuni dei quali garantiscono il controllo della workstation di un sistema SCADA o ICS. Ciò consente all&rsquo;attaccante di manipolare i dati inviati al PLC ed eseguire il pivoting all&rsquo;interno della rete. Un exploit creato da James Fitts, collaboratore del Exploit Database, consente a un utente malintenzionato remoto di immettere codice arbitrario nel software di programmazione PLC di Fatek, WinProladder, come documentato <a href="https://nvd.nist.gov/vuln/detail/CVE-2016-8377">CVE-2016-8377</a> del National Vulnerability Database.</p>
<p>Anche se l&rsquo;hacker può attivare l&rsquo;exploit in remoto, quest&rsquo;ultimo richiede comunque l&rsquo;interazione dell&rsquo;utente, come una visita a una pagina Web dannosa o l&rsquo;apertura di un file infetto, per sfruttarlo correttamente. L&rsquo;exploit è un buffer overflow su stack disponibile in Ruby per l&rsquo;importazione di Metasploit. Le applicazioni programmate in C sono spesso più vulnerabili agli overflow del buffer rispetto ad altri linguaggi di programmazione e ci sono molti pacchetti software basati su C in uso nei sistemi di controllo industriale. Ad esempio, l&rsquo;iniezione di shellcode attraverso una vulnerabilità di buffer overflow può consentire l&rsquo;accesso remoto al sistema o essere utilizzato per l&rsquo;escalation dei privilegi.</p>
<h2 id="siamo-spacciati">Siamo spacciati?</h2>
<p>La mancanza di sicurezza nei sistemi di controllo industriale è una delle principali preoccupazioni per la sicurezza. Un PLC è stato originariamente progettato per funzionare solo come operatore automatico in un sistema di controllo industriale e non per essere collegato a componenti esterni e raggiungibile da Internet. Tuttavia, l&rsquo;evoluzione nella progettazione di ICS ha iniziato a esporre i PLC a Internet, che può essere mostrato attraverso ricerche utilizzando strumenti come Shodan. I PLC si basano su reti con protezione &ldquo;air-gapped&rdquo; e accesso fisico limitato come misura di sicurezza.</p>
<p>Le reti air-gapped hanno più volte dimostrato di essere un design imperfetto e non sono in alcun caso un legittimo argomento di sicurezza nei moderni ICS. Ciò è stato dimostrato dall&rsquo;attacco di Stuxnet, che si è diffuso in oltre 115 paesi, infettando le infrastrutture critiche in tutto il mondo anche se la maggior parte dei sistemi di controllo sono stati progettati in isolamento. Questo cambiamento negli ambienti ICS e nelle infrastrutture critiche implica che i PLC sono esposti a una maggiore minaccia alla sicurezza rispetto a prima.</p>
<p><em>(Grazie al lavoro di Siv Hilde Houmb e Erik David Martin da cui è tratto questo articolo)</em></p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far com‌prendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: simulazione Modbus TCP in Linux</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-simulazione-modbus-tcp-in-linux/</link>
            <pubDate>Thu, 08 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-simulazione-modbus-tcp-in-linux/</guid>
            <description>I sistemi ICS utilizzano molti protocolli diversi per comunicare rispetto ai sistemi IT standard. Lo standard più utilizzato è il protocollo Modbus. Sviluppato per la prima volta da Modicon (ora Schneider Electric) nel 1979 come protocollo seriale, è stato modificato e aggiornato per funzionare su rete Ethernet TCP, assumendo il nome di Modbus TCP. Di seguito puoi vedere un diagramma che riassume la struttura del pacchetto RTU (seriale) e quella TCP.</description>
            <content type="html"><![CDATA[<p>I sistemi ICS utilizzano molti protocolli diversi per comunicare rispetto ai sistemi IT standard. Lo standard più utilizzato è il protocollo <a href="https://it.wikipedia.org/wiki/Modbus">Modbus</a>. Sviluppato per la prima volta da Modicon (ora Schneider Electric) nel 1979 come protocollo seriale, è stato modificato e aggiornato per funzionare su rete Ethernet TCP, assumendo il nome di Modbus TCP. Di seguito puoi vedere un diagramma che riassume la struttura del pacchetto RTU (seriale) e quella TCP.</p>
<p><img src="/uploads/2021/mod_sim_1.png" alt=""></p>
<p>Se vuoi approfondire l&rsquo;argomento ti suggerisco di leggere la guida che ho scritto &ldquo;<a href="hacking-modbus.md">Hacking: Modbus</a>&rdquo;.</p>
<p>In questo tutorial simuleremo una configurazione master e slave Modbus per illustrare come questo protocollo ormai quasi onnipresente nei sistemi OT funzioni in un ambiente industriale. Lo scopo è di capire meglio come funziona il protocollo e come può essere hackerato, manipolato e protetto.</p>
<h2 id="installazione">Installazione</h2>
<p>Modbus utilizza un&rsquo;architettura master/slave (client/server) in cui solo un dispositivo può inviare le richieste. Gli slave/server forniscono i dati richiesti al master o eseguono l&rsquo;azione richiesta dal master stesso. Uno slave è qualsiasi dispositivo periferico (trasduttore, valvola, unità di rete o altro ancora) che elabora le informazioni e invia il suo output al master tramite il protocollo Modbus.</p>
<p>Nel nostro caso useremo due software di simulazione disponibili in forma gratuita, uno con funzionalità di master chiamato <a href="https://sourceforge.net/projects/qmodmaster/">QModMaster</a> e l&rsquo;altro in versione slave, dal nome <a href="https://sourceforge.net/projects/modbuspal/">ModbusPal</a>.</p>
<p><strong>QModMaster</strong> è un&rsquo;applicazione open source basata sul framework Qt che implementa le funzioni di un master Modbus. E&rsquo; dotata di una GUI che consente una facile configurazione delle modalità di comunicazione (RTU, TCP) e di un bus monitor per analizzare il traffico dei pacchetti di comunicazione. Nel caso si utilizzi Windows è disponibile la versione binaria pre-compilata. Nel nostro caso, faremo il download del codice sorgente e ne eseguiremo la compilazione su una macchina Linux.</p>
<p><img src="/uploads/2021/mod_sim_2.png" alt="QModMuster in esecuzione su Linux"></p>
<p><strong>ModbusPal</strong> è un&rsquo;applicazione scritta in Java, quindi non necessita di alcuna compilazione in quanto indipendente dall&rsquo;host di esecuzione. Simula un dispositivo slave Modbus, con alcune funzioni avanzate come gli scripts Python.</p>
<p><img src="/uploads/2021/mod_sim_3.png" alt="ModbusPal con la tipica interfaccia &ldquo;Java style&rdquo;"></p>
<p>Come detto, dobbiamo compilare QModBus in modo che possa essere eseguito su sistemi Linux, nel mio caso Kubuntu 19.10. Scarichiamo il coside sorgente <a href="https://sourceforge.net/projects/qmodmaster/files/qModMaster-code-0.5.2-3.zip/download">qModMaster-code-0.5.2-3.zip</a> e salviamolo in una cartella di lavoro, nel mio caso <code>~/Develop/Projects/Modbus/qModMaster-code-0.5.2-3</code>.</p>
<p>Se listiamo i files presenti nella cartella vediamo che è presente il file <code>qModMaster.pro</code>, tipico di un progetto sviluppato con Qt. Per la compilazione è necessario disporre di una versione minima Qt 5.2.1 o superiore, scaricabile da <a href="http://www.qt.io/download/">questo link</a>.</p>
<p><img src="/uploads/2021/mod_sim_4.png" alt=""></p>
<p>A questo punto possiamo usare il comando <code>qmake</code> per convertire il file .pro in Makefile, compilabile con il più classico <code>make</code>.</p>
<pre tabindex="0"><code>$ qmake -o Makefile qModMaster.pro 
$ make
</code></pre><p>Dopo alcuni secondi di elaborazione abbiamo il nostro eseguibile pronto!</p>
<h2 id="utilizzo-del-simulatore">Utilizzo del simulatore</h2>
<p>Per prima cosa dobbiamo configurare lo slave, in modo che metta a disposizione le proprie risorse da far leggere al master, in questo caso configuriamo dei registri &ldquo;Holding Registers&rdquo;.</p>
<p>{% hint style=&ldquo;info&rdquo; %}
Entrambe le applicazioni richiedono privilegi <code>sudo</code> per poter accedere alla porta 502/TCP, per cui occorre avviarle con <code>sudo ./ModbusPal</code> e <code>sudo ./qModMaster</code> nelle rispettive cartelle di lavoro.
{% endhint %}</p>
<h3 id="configurazione-del-modulo-slave-modbuspal"><strong>Configurazione del modulo slave ModbusPal</strong></h3>
<p><strong>Link settings</strong><br>
****Selezioniamo &ldquo;TCP Port 502&rdquo;.<br>
Il protocollo Modbus TCP usa di default la porta 502 per la comunicazione TCP</p>
<p><strong>Modbus slaves</strong><br>
****Aggiungiamo un nodo slave premendo il pulsante &ldquo;Add&rdquo;, selezioniamo il numero dello slave e inseriamo un nome, nel nostro caso &ldquo;Slave1&rdquo;.</p>
<p><img src="/uploads/2021/mod_sim_5.png" alt=""></p>
<p>A questo punto dobbiamo configurare i parametri che rendiamo disponibili nel nostro slave. Click sull&rsquo;icona con l&rsquo;occhio per aprire la schermata delle proprietà. Successivamente, click su &ldquo;Add&rdquo; e inseriamo il numero di registri che vogliamo aggiungere, nel nostro caso da 1 a 8.</p>
<p><img src="/uploads/2021/mod_sim_6.png" alt=""></p>
<p>Ed ecco che compare la lista degli holding registers che abbiamo creato, con valori di default a 0. Possiamo già modificare il loro valore a piacimento, oppure farlo quando anche il master è attivo per vederne la lettura aggiornata in tempo reale.</p>
<p><img src="/uploads/2021/mod_sim_7.png" alt=""></p>
<p>Siamo pronti per avviare lo slave, premiamo il pulsante &ldquo;Run&rdquo; della schermata principale e passiamo a configurare il master.</p>
<h3 id="configurazione-del-modulo-master-qmodmaster"><strong>Configurazione del modulo master QModMaster</strong></h3>
<p>La configurazione del modulo master è altrettanto semplice, occorre tener presente alcuni parametri coerenti con lo slave che abbiamo creato:</p>
<p><strong>Mobbus Mode:</strong> TCP<br>
<strong>Unit ID:</strong> 1 (corrisponde al numero dello slave che abbiamo dichiarato prima)<br>
<strong>Function Code:</strong> Read Holding Registers (0x03)<br>
<strong>Number of Registers:</strong> 8</p>
<p><img src="/uploads/2021/mod_sim_8.png" alt=""></p>
<p>I &ldquo;Function Code&rdquo; e &ldquo;Mumber of Registers&rdquo; corrispondono al tipo e alla quantità di dati che abbiamo dichiarato nel modulo slave.</p>
<p>Di fault l&rsquo;app master è configurata in modo che comunichi con indirizzp IP 127.0.0.1 e porta 502 (come anche lo slave). Possiamo cambiare questi valori selezionando la schermata dal menù &ldquo;Options&rdquo; e poi &ldquo;Modbus TCP&rdquo;.</p>
<p><img src="/uploads/2021/mod_sim_9.png" alt=""></p>
<p>A questo punto non ci resta che attivare la connessione e l&rsquo;aggiornamento continuo dei dati tramite i pulsanti &ldquo;Connect&rdquo; e &ldquo;Scan&rdquo;. Il tempo di aggiornamento continuo dei dati è determinano dal parametro &ldquo;Scan Rate (ms)&rdquo;, che nel nostro caso corrisponde a un intervallo di 1 secondo.</p>
<h3 id="aggiornamento-dei-dati">Aggiornamento dei dati</h3>
<p><img src="/uploads/2021/mod_sim_10.png" alt=""></p>
<p>Ed ecco che se andiamo a modificare i dati dei registri del nostro slave avremo il corrispondente aggiornamento sul master.</p>
<h3 id="proviamo-a-scrivere-col-master">Proviamo a scrivere col master</h3>
<p>Ora che abbiamo visto come sia possibile leggere i dati dallo slave proviamo a modificare i valori dei registri dal master. Interrompiamo lo scan continuo e scegliamo &ldquo;Write Multiple Registers&rdquo; nel parametro &ldquo;Function Code&rdquo; della schermata principale di QModMaster.</p>
<p><img src="/uploads/2021/mod_sim_11.png" alt="Selezioniamo Write Multiple Registers"></p>
<p>Riattiviamo lo scan continuo, ora possiamo fare un doppio click su ciascun campo del registro per modificarne il valore, che vedremo aggiornarsi sul modulo slave.</p>
<p><img src="/uploads/2021/mod_sim_12.png" alt=""></p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far com‌prendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: Modbus</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-modbus/</link>
            <pubDate>Wed, 07 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-modbus/</guid>
            <description>Una delle sfide del pentesting in ambito OT/ICS è data dai protocolli impiegati che possono essere anche molto diversi da quelli dell&amp;rsquo;IT. Le installazioni ICS utilizzano un&amp;rsquo;ampia varietà di protocolli che spesso hanno ben poco in comune con gli standard Ethernet e TCP/IP. Questa differenza è stata per anni il punto di forza delle installazioni OT, proteggendole attraverso il meccanismo della &amp;ldquo;sicurezza per oscurità&amp;rdquo;. Ora che questi protocolli stanno diventando sempre più conosciuti e compresi, le preoccupazioni di sicurezza in queste strutture sono state accentuate.</description>
            <content type="html"><![CDATA[<p>Una delle sfide del pentesting in ambito OT/ICS è data dai protocolli impiegati che possono essere anche molto diversi da quelli dell&rsquo;IT. Le installazioni ICS utilizzano un&rsquo;ampia varietà di protocolli che spesso hanno ben poco in comune con gli standard Ethernet e TCP/IP. </p>
<p>Questa differenza è stata per anni il punto di forza delle installazioni OT, proteggendole attraverso il meccanismo della &ldquo;sicurezza per oscurità&rdquo;. Ora che questi protocolli stanno diventando sempre più conosciuti e compresi, le preoccupazioni di sicurezza in queste strutture sono state accentuate.</p>
<p>In questo articolo vediamo le principali caratteristiche di uno di questi protocolli: il <strong>Modbus.</strong></p>
<h2 id="lo-standard-modbus">Lo standard Modbus</h2>
<p>Il protocollo Modbus si caratterizza principalmente per il supporto fisico di connessione, che può essere su porta seriale o su Ethernet. Esistono diverse varianti del protocollo:</p>
<ul>
<li>Modbus RTU</li>
<li>Modbus ASCII</li>
<li>Modbus TCP</li>
<li>Modbus over TCP/IP o Modbus RTU/IP</li>
<li>Modbus over UDP</li>
<li>Modbus Plus (Modbus+)</li>
<li>Secure Modbus</li>
</ul>
<p>In questo articolo tratterò quelli più diffusi: Modbus RTU e Modbus TCP. Farò anche un cenno sul Secure Modbus, una versione del protocollo orientata alla sicurezza e che incorpora un layer per la cifratura dei dati.</p>
<h3 id="modbus-rtu">Modbus RTU</h3>
<p>Modbus RTU è stato sviluppato per la prima volta nel 1979 da Modicon (ora parte di Schneider Electric) per i propri sistemi di automazione industriale e PLC. È diventato lo standard de facto del settore. Modbus è un protocollo di dominio pubblico ampiamente accettato, è un protocollo semplice e leggero destinato alla comunicazione seriale. Ha un limite di dati di 253 byte.</p>
<p>Modbus opera al livello 7 del modello OSI. È una metodologia di comunicazione efficiente tra dispositivi interconnessi utilizzando un modello di &ldquo;richiesta/risposta&rdquo;. Proprio perché è semplice e leggero richiede poca potenza di elaborazione. Basti pensare che esistono librerie di comunicazione disponibili per praticamente qualunque dispositivo embedded, a partire da una semplice scheda Arduino fino alla più sofisticata Raspberry.</p>
<p>Modbus è stato inizialmente implementato sulla tipologia fisica RS-232C (punto-punto) o RS-485 (multi-drop). Può avere fino a 32 dispositivi che comunicano tramite un collegamento seriale con ciascun dispositivo con un ID univoco.</p>
<p><img src="/uploads/2021/mod_1.png" alt=""></p>
<p>Modbus utilizza un&rsquo;architettura master/slave (client/server) in cui solo un dispositivo può inviare le richieste. Gli slave/server forniscono i dati richiesti al master o eseguono l&rsquo;azione richiesta dal master stesso. Uno slave è qualsiasi dispositivo periferico (trasduttore, valvola, unità di rete o altro ancora) che elabora le informazioni e invia il suo output al master tramite il protocollo Modbus.</p>
<p>I master possono rivolgersi a singoli slave o inviare un messaggio in broadcast a tutti gli slave. Gli slave restituiscono una risposta a tutte le query indirizzate a loro individualmente, ma non rispondono alle query broadcast. Gli slave non generano messaggi, possono solo rispondere al master. La query di un master sarà composta dall&rsquo;indirizzo slave (ID slave o ID unità), un codice funzione, tutti i dati richiesti e un campo di controllo degli errori CRC.</p>
<p>Modbus comunica utilizzando i <strong>Function Codes</strong>, codici funzione che identificano un&rsquo;ampia gamma di comandi.</p>
<p><img src="/uploads/2021/mod_2.png" alt="Principali Function Codes per accesso dati e diagnostica"></p>
<h3 id="modbus-tcp">Modbus TCP</h3>
<p>Modbus TCP è il protocollo Modbus incapsulato per l&rsquo;uso su TCP/IP usando la porta 502. Utilizza la stessa richiesta/risposta di Modbus RTU, gli stessi codici funzione e lo stesso limite di dati di 253 byte. Il campo di controllo degli errori utilizzato in Modbus RTU viene eliminato poiché il livello di collegamento TCP/IP utilizza i suoi metodi di checksum.</p>
<p>Modbus TCP aggiunge un livello applicazione (MBAP) al frame Modbus RTU. È lungo 7 byte con 2 byte per l&rsquo;intestazione, 2 byte per l&rsquo;identificatore del protocollo, 2 byte per la lunghezza e 1 byte per l&rsquo;indirizzo (ID unità).</p>
<p><img src="/uploads/2021/mod_3.png" alt=""></p>
<p>L&rsquo;utilizzo di Ethernet consente di realizzare architetture più complesse, anche di tipo ibrido facendo uso di appositi gateway.</p>
<p><img src="/uploads/2021/mod_4.png" alt="Architettura ibrida RTU / TCP"></p>
<h3 id="formato-del-pacchetto-dati">Formato del pacchetto dati</h3>
<p>Un frame Modbus consiste in un Application Data Unit (ADU) che incapsula un Protocol Data Unit (PDU), secondo questo schema:</p>
<ul>
<li>ADU = Address + PDU + Error check</li>
<li>PDU = Function code + Data</li>
</ul>
<p>L&rsquo;ordine dei byte per i valori nei frame di dati Modbus è il byte più significativo di un valore multi-byte inviato prima degli altri. Tutte le varianti Modbus utilizzano uno dei seguenti formati di frame.</p>
<h4 id="formato-del-frame-modbus-rtu">Formato del frame Modbus RTU</h4>
<table>
<thead>
<tr>
<th>Nome</th>
<th>Lung. (bits)</th>
<th>Funzione</th>
</tr>
</thead>
<tbody>
<tr>
<td>Start</td>
<td>28</td>
<td>Almeno 3½ caratteri di inizio frame (con condizione del segno)</td>
</tr>
<tr>
<td>Address</td>
<td>8</td>
<td>Indirizzo della stazione</td>
</tr>
<tr>
<td>Function</td>
<td>8</td>
<td>Codice funzione, es. read coils/holding registers</td>
</tr>
<tr>
<td>Data</td>
<td>n × 8</td>
<td>Dati + lunghezza verranno riempiti in base al tipo di messaggio</td>
</tr>
<tr>
<td>CRC</td>
<td>16</td>
<td>Cyclic Redundancy Check</td>
</tr>
<tr>
<td>End</td>
<td>28</td>
<td>Almeno 3½ caratteri di silenzio tra i frames</td>
</tr>
</tbody>
</table>
<p>Note sul calcolo del CRC:</p>
<ul>
<li>Polinomiale: x16 + x15 + x2 + 1 (CRC-16-ANSI anche noto come CRC-16-IBM, polinomio algebrico esadecimale normale essendo <code>8005</code> e invertito <code>A001</code>).</li>
<li>Valore iniziale: 65.535.</li>
<li>Esempio di frame in esadecimale: <code>01 04 02 FF FF B8 80</code> (CRC-16-ANSI calcolato a partire da <code>01</code> fino a <code>FF</code> genera <code>80B8</code>, viene <strong>prima</strong> trasmesso il byte <strong>meno</strong> significativo).</li>
</ul>
<h4 id="formato-del-frame-modbus-ascii">Formato del frame Modbus ASCII</h4>
<table>
<thead>
<tr>
<th>Nome</th>
<th>Lung. (bytes)</th>
<th>Funzione</th>
</tr>
</thead>
<tbody>
<tr>
<td>Start</td>
<td>1</td>
<td>Inizia con <code>:</code> (valore ASCII<code>3A</code>)</td>
</tr>
<tr>
<td>Address</td>
<td>2</td>
<td>Indirizzo della stazione</td>
</tr>
<tr>
<td>Function</td>
<td>2</td>
<td>Codice funzione, es. read coils</td>
</tr>
<tr>
<td>Data</td>
<td>n × 2</td>
<td>Dati + lunghezza verranno riempiti in base al tipo di messaggio</td>
</tr>
<tr>
<td>LRC</td>
<td>2</td>
<td>Checksum (<a href="https://en.wikipedia.org/wiki/Longitudinal_redundancy_check">Longitudinal redundancy check</a>)</td>
</tr>
<tr>
<td>End</td>
<td>2</td>
<td>&lt;CR&gt;&lt;LF&gt; insieme (valori ASCII <code>0D</code>, <code>0A</code>)</td>
</tr>
</tbody>
</table>
<h4 id="formato-del-frame-modbus-tcp">Formato del frame Modbus TCP</h4>
<table>
<thead>
<tr>
<th>Name</th>
<th>Lung. (bytes)</th>
<th>Funzione</th>
</tr>
</thead>
<tbody>
<tr>
<td>Transaction identifier</td>
<td>2</td>
<td>Per la sincronizzazione tra messaggi di server e client</td>
</tr>
<tr>
<td>Protocol identifier</td>
<td>2</td>
<td>0 per Modbus/TCP</td>
</tr>
<tr>
<td>Length field</td>
<td>2</td>
<td>Numero di byte rimanenti in questo frame</td>
</tr>
<tr>
<td>Unit identifier</td>
<td>1</td>
<td>Indirizzo slave (255 se non usato)</td>
</tr>
<tr>
<td>Function code</td>
<td>1</td>
<td>Codice funzione</td>
</tr>
<tr>
<td>Data bytes</td>
<td>n</td>
<td>Dati come risposta o comandi</td>
</tr>
</tbody>
</table>
<h2 id="sicurezza-del-protocollo-modbus">Sicurezza del protocollo Modbus</h2>
<p>Modbus deve la sua larghissima diffusione alla semplicità del protocollo e alla sua ormai storica presenza sul mercato. Ma proprio per questi due fattori offre il fianco a diverse possibilità di attacco, con numerose vulnerabilità note. Ecco come potrebbero essere eseguiti alcuni attacchi sfruttando le semplici funzioni che il protocollo stesso mette a disposizione, senza strumenti dedicati all&rsquo;enumeration come <strong>nmap</strong>.</p>
<blockquote>
<p>Un hacker può iniziare il suo attacco in fase di reconnaissance eseguendo lo scanning della rete per individuare i dispositivi Modbus usando i comandi di diagnostica del protocollo: <strong>Clear Counter</strong> e <strong>Diagnostic Register</strong>. Una richiesta inviata al PLC, con codice funzione 8 (0x08) e codice funzione secondaria 10 (0x0A), farà in modo che il server di destinazione cancelli i suoi contatori e il registro diagnostico. Questa funzione è in genere implementata solo nei dispositivi seriali.</p>
</blockquote>
<blockquote>
<p>Un altro comando di diagnostica che può essere utilizzato è il <strong>Read Device Identification</strong> come tentativo di raccogliere informazioni sul dispositivo Modbus: una richiesta con il codice funzione 43 di Read Device Identification farà sì che un server Modbus restituisca il nome del fornitore, il nome del prodotto e il numero di versione. Ulteriori informazioni possono essere fornite anche in campi opzionali. Un utente malintenzionato invia il pacchetto di richiesta Modbus con il codice funzione 43 a tutti i sistemi della rete e raccoglie informazioni che potrebbero essere utili per successivi attacchi.</p>
</blockquote>
<h3 id="vulnerabilità-del-protocollo-modbus">Vulnerabilità del protocollo Modbus</h3>
<p>L&rsquo;implementazione del protocollo Modbus TCP contiene diverse vulnerabilità che potrebbero consentire a un utente malintenzionato di eseguire attività di enumeration o di inviare comandi arbitrari.</p>
<ol>
<li><strong>Mancanza di riservatezza</strong>: tutti i messaggi Modbus vengono trasmessi in chiaro attraverso il supporto di trasmissione.</li>
<li><strong>Mancanza di integrità</strong>: non esistono controlli di integrità all&rsquo;interno del protocollo e, di conseguenza, dipende da protocolli di livello inferiore preservare l&rsquo;integrità dei dati.</li>
<li><strong>Mancanza di autenticazione</strong>: non esiste autenticazione a nessun livello del protocollo, con la possibile eccezione di alcuni comandi di programmazione non documentati.</li>
<li><strong>Framing semplicistico</strong>: i frame Modbus TCP vengono inviati tramite connessioni TCP stabilite. Sebbene tali connessioni siano generalmente affidabili, presentano un significativo svantaggio per via del punto successivo.</li>
<li><strong>Mancanza di struttura della sessione</strong>: come molti protocolli di richiesta/risposta (es. SNMP, HTTP, ecc.) Modbus TCP è costituito da transazioni di breve durata in cui il master invia una richiesta allo slave che si traduce in una singola azione. Se combinato con la mancanza di autenticazione e la scarsa generazione del TCP Initial Sequence Number (ISN) in molti dispositivi embedded, diventa possibile per gli aggressori immettere comandi senza conoscere la sessione esistente.</li>
</ol>
<p><strong>Vulnerabilità &ldquo;Illegal Function Exception&rdquo;</strong><br>
Queste vulnerabilità consentono a un utente malintenzionato di svolgere attività di ricognizione sulla rete di destinazione. La prima vulnerabilità esiste perché un dispositivo slave Modbus può restituire una <em>Illegal Function Exception</em> per le query che contengono un codice funzione non supportato. Un utente remoto non autenticato può sfruttare questa vulnerabilità inviando codici funzione predisposti per effettuare ricognizioni sulla rete di destinazione.</p>
<p><strong>Vulnerabilità &ldquo;Illegal Address Exception&rdquo;</strong><br>
Un&rsquo;ulteriore vulnerabilità di ricognizione è dovuta alle molteplici risposte di <em>Illegal Address Exception</em> generate per le query che contengono un indirizzo slave illegale. Un utente malintenzionato non autenticato può sfruttare questa vulnerabilità inviando query che contengono indirizzi non validi alla rete di destinazione e raccogliere informazioni sugli host di rete dai messaggi restituiti.</p>
<p><strong>Vulnerabilità sull&rsquo;autenticazione</strong><br>
Un&rsquo;altra vulnerabilità è dovuta alla mancanza di controlli di sicurezza nell&rsquo;implementazione del protocollo Modbus TCP. Le specifiche del protocollo non includono un meccanismo di autenticazione per la convalida della comunicazione tra i dispositivi master e slave. Questo difetto potrebbe consentire a un utente non autenticato di inviare comandi arbitrari a qualsiasi dispositivo slave tramite un master di attacco.</p>
<p><strong>Vulnerabilità DoS</strong><br>
Il protocollo Modbus TCP contiene anche vulnerabilità che potrebbero consentire a un utente malintenzionato di causare una condizione di Denial of Service (DoS) su un sistema di destinazione. La vulnerabilità è dovuta a un errore di implementazione nel protocollo stesso durante l&rsquo;elaborazione dei messaggi di richiesta e risposta di input discreti.</p>
<p><strong>Vulnerabilità di buffer overfllow</strong><br>
Un altro attacco a Modbus può essere il pacchetto dati che supera la lunghezza massima. Il protocollo limita la dimensione della PDU a 253 byte per consentire l&rsquo;invio del pacchetto su una linea seriale, es. interfaccia RS-485. Modbus TCP antepone alla PDU un&rsquo;intestazione Modbus Application Protocol (MBAP) di 7 byte e il tutto, MBAP+PDU, viene incapsulato in un pacchetto TCP. Ciò pone un limite massimo alla dimensione del pacchetto.</p>
<p>Un utente malintenzionato crea un pacchetto appositamente predisposto di lunghezza superiore a 260 byte e lo invia a un client e server. Se il client o server sono stati programmati in modo errato ciò potrebbe provocare un overflow del buffer o un attacco denial-of-service.</p>
<p><strong>Sniffing del protocollo</strong><br>
L&rsquo;attacco più semplice da usare contro Modbus è lo sniffing del traffico di rete, trovare i dispositivi connessi e quindi inviare comandi dannosi ai dispositivi.</p>
<p>Non avendo funzionalità di sicurezza o crittografia, è facile utilizzare Wireshark per raccogliere informazioni da pacchetti di dati che sulla rete da e verso una porta Modbus su un dispositivo e leggere il contenuto di tali pacchetti. Wireshark consente di vedere facilmente cosa è contenuto in questi pacchetti, esaminare gli indirizzi IP, vedere i codici funzione delle richieste e alterare il corretto funzionamento dei dispositivi.</p>
<p><img src="/uploads/2021/mod_5.png" alt="Whireshark in azione"></p>
<h3 id="secure-modbus">Secure Modbus</h3>
<p>L’approccio più comune alla protezione dei protocolli OT è quello di incapsularli all’interno di un protocollo TLS (Transport Layer Security) e utilizzare l’autenticazione reciproca. Molti organismi di standardizzazione pubblicano linee guida per farlo a seconda dei protocollo, ad esempio:</p>
<ul>
<li>ODVA specifica come applicare la crittografia TLS al protocollo EtherNet/IP.</li>
<li>Schneider Electric ha recentemente lavorato per creare una versione <strong>Secure Modbus</strong>, che prevede anche l’aggiunta dell’estensione X.509 per la definizione delle autorizzazioni (read-only o read-write).</li>
<li>IEC 62351-3 definisce come utilizzare TLS per il settore dell’industria energetica sui protocolli basati su TCP.</li>
</ul>
<p><img src="/uploads/2021/mod_6.png" alt="Modbus TCP Security"></p>
<p><img src="/uploads/2021/mod_7.png" alt=""></p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far com‌prendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: Profibus/Profinet</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-profibus/profinet/</link>
            <pubDate>Tue, 06 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-profibus/profinet/</guid>
            <description>Una delle sfide del pentesting in ambito OT/ICS è data dai protocolli impiegati che possono essere anche molto diversi da quelli dell&amp;rsquo;IT. Le installazioni ICS utilizzano un&amp;rsquo;ampia varietà di protocolli che spesso condividono hanno ben poco in comune con gli standard Ethernet e TCP/IP. Questa differenza è stata per anni il punto di forza delle installazioni OT, proteggendole attraverso il meccanismo della &amp;ldquo;sicurezza per oscurità&amp;rdquo;. Ora che questi protocolli stanno diventando sempre più conosciuti e compresi, le preoccupazioni di sicurezza in queste strutture sono state accentuate.</description>
            <content type="html"><![CDATA[<p>Una delle sfide del pentesting in ambito OT/ICS è data dai protocolli impiegati che possono essere anche molto diversi da quelli dell&rsquo;IT. Le installazioni ICS utilizzano un&rsquo;ampia varietà di protocolli che spesso condividono hanno ben poco in comune con gli standard Ethernet e TCP/IP. </p>
<p>Questa differenza è stata per anni il punto di forza delle installazioni OT, proteggendole attraverso il meccanismo della &ldquo;sicurezza per oscurità&rdquo;. Ora che questi protocolli stanno diventando sempre più conosciuti e compresi, le preoccupazioni di sicurezza in queste strutture sono state accentuate.</p>
<p>In questo articolo vediamo le principali caratteristiche di uno di questi protocolli: il <strong>Profibus.</strong></p>
<h2 id="lo-standard-profibus">Lo standard Profibus</h2>
<p><strong>Profibus</strong> (<strong>Pro</strong>cess <strong>Fi</strong>eld<strong>bus</strong>) è uno standard aperto per la comunicazione industriale originariamente sviluppato in Germania. È iniziato da un gruppo di 21 aziende e istituzioni denominate &ldquo;Central Association for Electrical Industry&rdquo; (ZVEI), guidato dal gigante industriale Siemens. Per questa ragione Profibus è ampiamente utilizzato nei prodotti Siemens ed è il bus di comunicazione sfruttato dal malware Stuxnet nella centrale nucleare iraniana di Natanz durante il famoso attacco informatico.</p>
<p>Profibus è un protocollo intelligente e bidirezionale multipunto, in cui tutti i dispositivi Profibus sono interoperabili. I dati possono rappresentare valori analogici o digitali.  È un protocollo economico, semplice e ad alta velocità. Profibus utilizza una connessione a due fili per alimentazione e dati.</p>
<p>La tipologia del protocollo è master-slave, come molti altri protocolli SCADA/ICS, che supporta i nodi master mediante l&rsquo;uso della condivisione di un token. Simile al protocollo token-ring di IBM, solo quando il master ha il token può comunicare con gli slave. Lo slave Profibus può comunicare solo con un master. Il nodo Profibus master è in genere un PLC o RTU e gli slave sono sensori, motori o altri dispositivi di controllo.</p>
<p><img src="/uploads/2021/profi_1.png" alt=""></p>
<h3 id="tipi-di-profibus">Tipi di Profibus</h3>
<p>La famiglia dei protocolli Profibus si divide principalmente in due due categorie: Profibus DP e ProfiNet. Gli impieghi cambiano sensibilmente: mentre il primo è un tradizionale fieldbus master-slave con trasmissione seriale con rete ad anello, il secondo ne è la sua evoluzione e permette la comunicazione tra segmenti diversi di bus utilizzando Ethernet.</p>
<p><img src="/uploads/2021/profi_2.png" alt=""></p>
<h4 id="profibus-fms">Profibus FMS</h4>
<p>Questo era il protocollo Profibus iniziale. È stato progettato per comunicare tra PLC e PC. Sfortunatamente questo semplice protocollo non era molto flessibile e, di conseguenza, non poteva funzionare in una rete più complessa e complicata. Sebbene sia ancora in uso, la stragrande maggioranza delle reti Profibus utilizza una delle versioni più recenti.</p>
<h4 id="profibus-dp-decentralized-periphery">Profibus DP (Decentralized Periphery)</h4>
<p>Profibus DP è probabilmente il più comune dei protocolli Profibus. È più semplice e veloce rispetto agli altri tipi. È disponibile in tre versioni separate: DP-V0 (scambio ciclico di dati), DP-V1 (scambio aciclico di dati) e DP-V2 (modalità slave-to-slave isocrono e scambio di dati) con ogni nuova versione che offre funzionalità aggiuntive.</p>
<h4 id="profibus-pa-process-automation">Profibus PA (Process Automation)</h4>
<p>Profibus PA, come suggerisce il nome, è stato sviluppato per Process Automation. Questa versione del protocollo standardizza il processo di trasmissione dei dati misurati. Inoltre, è stato progettato per l&rsquo;uso in ambienti pericolosi utilizzando la tecnologia Manchester Bus Powered (MBS) che utilizza una potenza inferiore e quindi riduce la possibilità di scintille ed esplosioni.</p>
<h3 id="prifinet-process-field-net">PrifiNet (Process Field Net)</h3>
<p>ProfiNet (<strong>Pro</strong>cess <strong>Fi</strong>eld <strong>Net</strong>) è un altro standard aperto per l&rsquo;automazione industriale progettato per la scalabilità. Invece di scambiare dati utilizzando il bus di campo (seriale), utilizza Ethernet (IEEE802.3) come supporto. È incluso come parte di IEC-61158 e IEC-61784. Inizialmente utilizzava pacchetti TCP/IP standard.</p>
<p>ProfiNet ha come punto di forza il fornire dati con vincoli di tempo ristretti. Esso utilizza standard IT come TCP/IP e XML per comunicare, configurare e diagnosticare macchine e dispositivi. Può funzionare fino a 100 Mbit/s su cavi a doppino intrecciato o fibra ottica.</p>
<p>ProfiNet NON è Profibus su Ethernet, ma sono compatibili con l&rsquo;uso di specifici proxy per collegarli.</p>
<p>ProfiNet ha due classi di funzioni:</p>
<ol>
<li>ProfiNet I/O (input/output)</li>
<li>ProfiNet CBA (automazione basata su componenti)</li>
</ol>
<h4 id="profinet-io">ProfiNet I/O</h4>
<p>Collega i dispositivi di campo distribuiti e utilizza comunicazioni real-time (RT) e standard (TCP/IP).</p>
<p>Il canale real-time (RT) viene utilizzato per dati critici che richiedono tempi di scambio ridottissimi, come dati di processo ciclici, allarmi e monitoraggio delle comunicazioni ed è in grado di eseguire cicli di 10 ms.</p>
<p>Il canale standard viene utilizzato per il download di configurazione e parametri, diagnostica, informazioni sulla gestione del dispositivo e altre comunicazioni non critiche con tempi di scambio nell&rsquo;intervallo di 100 ms.</p>
<p>Appartenente sempre alla famiglia I/O esiste poi il ProfiNet IRT (Isochronous Real-Time), che viene utilizzato nei sistemi di azionamento con tempi di ciclo inferiori a 1 ms. Poiché ProfiNet IRT è una tecnologia Layer 2 basata su hardware non è instradabile.</p>
<p>Profibus I/O utilizza le porte TCP/UDP numero 34962, 34963 e 34964.</p>
<h4 id="profinet-cba">ProfiNet CBA</h4>
<p>E&rsquo; progettato per applicazioni di automazione industriale distribuita. ProfiNet CBA è basato sullo standard DCOM (Distributed Component Model) e RPC (Remote procedure Call). Questo significa anche che ne eredita quindi le vulnerabilità di DCOM e RPC.</p>
<p>ProfiNet CBA utilizza la porta standard TCP numero 135.</p>
<h2 id="la-sicurezza-dei-protocolli">La sicurezza dei protocolli</h2>
<p>Come molti protocolli OT/ICS, anche Profibus DP manca di autenticazione. Ciò significa che qualsiasi nodo può falsificare un nodo master. Poiché solo quest&rsquo;ultimo può controllare gli slave, questa è una delle maggiori vulnerabilità del sistema. Un nodo master contraffatto sarebbe in grado di acquisire il token, interrompere le funzioni del nodo e persino causare un Denial of Service (DoS). Dal momento che la maggior parte dei nodi master in una rete Profibus DP sono collegati a una rete Ethernet, questo li rende sensibili a quasi tipo di attacco basato su Ethernet.</p>
<p>La stessa cosa vale per ProfiNet. Poiché esistono diverse tecnologie in questa suite il rischio dipende da quella utilizzata. Fa eccezione, almeno in parte, il protocollo ProfiNet IRT che utilizza indirizzi non instradabili e quindi risulta immune alle vulnerabilità IP.</p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far com‌prendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: Metasploit SCADA modules</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-metasploit-scada-modules/</link>
            <pubDate>Mon, 05 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-metasploit-scada-modules/</guid>
            <description>Come penetration tester abbiamo molte risorse a disposizione per testare il livello di sicurezza di un sistema IT. Uno dei più diffusi strumenti è Metasploit Framework, sviluppato da Rapid7. Si tratta di uno strumento in grado di coprire le fasi di enumeration, exploitation e privilege escalation, molto flessibile e modulare.
Da diverso tempo ormai, vista l&amp;rsquo;attenzione che il mondo della cybersec sta dedicando alle infrastrutture ICS, possiamo trovare un lungo elenco di moduli Metasploit che hanno come target i sistemi SCADA, i PLC e i principali protocolli di comunicazione industriale.</description>
            <content type="html"><![CDATA[<p>Come penetration tester abbiamo molte risorse a disposizione per testare il livello di sicurezza di un sistema IT. Uno dei più diffusi strumenti è <a href="https://www.metasploit.com/">Metasploit Framework</a>, sviluppato da Rapid7. Si tratta di uno strumento in grado di coprire le fasi di enumeration, exploitation e privilege escalation, molto flessibile e modulare.</p>
<p>Da diverso tempo ormai, vista l&rsquo;attenzione che il mondo della cybersec sta dedicando alle infrastrutture ICS, possiamo trovare un lungo elenco di moduli Metasploit che hanno come target i sistemi SCADA, i PLC e i principali protocolli di comunicazione industriale.</p>
<p>Ed è proprio per via del fatto che i siti ICS utilizzano hardware e protocolli diversi occorre svolgere una fase di reconnaissance molto attenta per portare un attacco di successo. Serve conoscere il produttore e il protocollo per trovare il modulo appropriato.</p>
<p>Di seguito ho riassunto l&rsquo;elenco dei moduli presenti al momento della scrittura di questo articolo, suddivisi tra ausiliari (reconnaissance e commands) e di exploitation.</p>
<p><img src="/uploads/2021/metasploit_ot_1.png" alt="Auxiliary modules"></p>
<p><img src="/uploads/2021/metasploit_ot_2.png" alt="Exploit modules"></p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far comprendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: Schneider Electric Building Automation</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-schneider-electric-building-automation/</link>
            <pubDate>Sun, 04 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-schneider-electric-building-automation/</guid>
            <description>I sistemi ICS controllano i processi industriali in tutto il mondo. Tutto, dalle ferrovie, ai semafori, alle raffinerie di petrolio, agli edifici commerciali, è controllato da almeno un PLC connesso a un terminale operatore HMI o a un software di controllo SCADA. Alcune delle recenti preoccupazioni legate ad essi è la possibile violazione da parte di cyber criminali o di enti governativi. In entrambi i casi i risultati potrebbero essere devastanti (il disastro di Bhopal nello stabilimento di Union Carbide è costato oltre 30.</description>
            <content type="html"><![CDATA[<p>I sistemi ICS controllano i processi industriali in tutto il mondo. Tutto, dalle ferrovie, ai semafori, alle raffinerie di petrolio, agli edifici commerciali, è controllato da almeno un PLC connesso a un terminale operatore HMI o a un software di controllo SCADA. Alcune delle recenti preoccupazioni legate ad essi è la possibile violazione da parte di cyber criminali o di enti governativi. In entrambi i casi i risultati potrebbero essere devastanti (il disastro di Bhopal nello stabilimento di Union Carbide è costato oltre 30.000 vite). Nonostante ciò, questi sistemi sono insolitamente vulnerabili all&rsquo;hacking e alle attività dannose.</p>
<p>In questo tutorial mostrerò come hackerare un sistema di controllo industriale di Schneider Electric, uno dei maggiori produttori al mondo di sistemi ICS e per la Buinding Automation. A causa della debole sicurezza integrata in fase di sviluppo, problema molto diffuso nei prodotti IIoT, alcuni di questi sistemi sono incredibilmente facili da violare e prenderne il controllo.</p>
<h3 id="conosciamo-meglio-il-nostro-target">Conosciamo meglio il nostro target</h3>
<p><a href="https://www.se.com/ww/en/">Schneider Electric</a> è una società con sede a Parigi, leader mondiale nel settore del controllo industriale. Sono stati tra i pionieri in questo campo introducendo molti concetti innovativi poi replicati dai concorrenti, e hanno anche il merito di aver sviluppato il protocollo di comunicazione più utilizzato nei sistemi di controllo industriale: il <a href="https://it.wikipedia.org/wiki/Modbus">Modbus</a>.</p>
<p>Schneider Electric all&rsquo;interno del proprio vasto catalogo conta anche una gamma di PLC dedicati all&rsquo;automazione degli edifici.</p>
<p><img src="/uploads/2021/building_1.png" alt="Un server della famiglia SmartStruxure"></p>
<p>Uno dei loro prodotti, lo SmartStruxure Automation Server, viene utilizzato negli edifici commerciali per controllare e automatizzare i numerosi sistemi tra cui riscaldamento e raffreddamento, illuminazione, sicurezza, ecc. Nel 2016, il ricercatore indipendente Karn Ganeshen ha individuato una vulnerabilità 0-day, oggetto poi di una patch da parte di Schneider, che permetteva di entrare nel server con una shell e acquisire i privilegi di root.</p>
<p>Ma andiamo con ordine.</p>
<h3 id="trovare-i-server-schneider-automation-con-shodan">Trovare i server Schneider Automation con Shodan</h3>
<p>Possiamo trovare questi server di automazione su Shodan cercando:</p>
<p><code>&quot;schneider electric&quot; automation</code></p>
<p><img src="/uploads/2021/building_2.png" alt="I risultati su Shodan"></p>
<p>Come possiamo notare, compare un lungo elenco di dispositivi direttamente connessi a Internet, con il relativo indirizzo IP pubblico. Nel nostro caso userò un prodotto dimostrativo all&rsquo;interno della rete locale.</p>
<h2 id="la-vulnerabilità">La vulnerabilità</h2>
<p>La vulnerabilità in oggetto consente all&rsquo;autore dell&rsquo;attacco di connettersi al server di automazione con una shell SSH utilizzando le credenziali predefinite e di ottenere facilmente i privilegi di &ldquo;root&rdquo;. Così facendo, l&rsquo;attaccante non possiede solo la &ldquo;scatola&rdquo;, ma l&rsquo;intero edificio!</p>
<h3 id="connessione-al-building-automation-server">Connessione al Building Automation Server</h3>
<p>Innanzitutto, colleghiamoci al nostro server con una shell SSH. Userò Kali Linux, ma dal momento che questo hack è molto semplice può essere eseguito usando qualsiasi distribuzione, senza l&rsquo;ausilio di strumenti di hacking particolari come ad es. Metasploit.</p>
<pre tabindex="0"><code>root@kali:~# ssh &lt;IP_address&gt; -l admin
</code></pre><p>Dopo che ci siamo connessi il server ci chiederà una password. Utilizziamo la password predefinita &ldquo;<strong>admin</strong>&rdquo;.</p>
<p><img src="/uploads/2021/root_1.png" alt=""></p>
<p>A questo punto siamo all&rsquo;interno dell&rsquo;account amministratore di Automation Server. Possiamo digitare <code>help</code> per vedere quali comandi possiamo usare con questo account.</p>
<p><img src="/uploads/2021/root_2.png" alt=""></p>
<p>Ad esempio, digitiamo <code>release</code>. Il sistema risponde con le informazioni sulla versione del server. Inoltre, va notato che uno dei comandi è <code>reboot</code>, che potrebbe essere utile nel caso di un attacco DoS.</p>
<p><img src="/uploads/2021/root_3.png" alt=""></p>
<p>Possiamo inoltre vedere il tempo trascorso dall&rsquo;ultimo avvio digitando il comando <code>uptime</code>. Questa informazione è sempre molto utile in fase di attacco perchè può indicare, normalmente, il tempo trascorso da quando il sistema ha subito una patch di aggiornamento.</p>
<pre tabindex="0"><code>admin:&gt; uptime
</code></pre><p><img src="/uploads/2021/root_4.png" alt=""></p>
<p>Uno dei punti deboli di questo sistema è che possiamo usare il comando Linux pipe &ldquo;|&rdquo; per inoltrare ulteriori comandi al server sottostante. Facendo un esempio pratico, possiamo vedere il file &ldquo;passwd&rdquo; sul server digitando:</p>
<pre tabindex="0"><code>admin:&gt; uptime | cat /etc/passwd
</code></pre><p><img src="/uploads/2021/root_5.png" alt=""></p>
<p>In questo modo abbiamo elencato tutti gli account presenti sul server. Naturalmente questo file contiene solo gli account e non le password, che invece si trovano nel file <strong>/etc/shadow</strong> accessibile unicamente con i diritti di <strong>root</strong>.</p>
<h3 id="privilege-escalation">Privilege escalation</h3>
<p>La fase di privilege escalation, nella maggior parte dei casi in campo IT, richiede procedure a volte lunghe e complesse, indipendentemente che si stia attaccando una macchina Windows o Linux. Ma come ho detto, nel campo OT non sempre i livelli di sicurezza sono (in questo caso, &ldquo;erano&rdquo;) adeguati. Possiamo ottenere il livello di root semplicemente digitando:</p>
<pre tabindex="0"><code>admin:&gt; sudo -i
</code></pre><p><img src="/uploads/2021/root_6.png" alt=""></p>
<p><strong>Boom!</strong> La configurazione predefinita di questo server di automazione dell&rsquo;edificio non ha password per l&rsquo;account &ldquo;root&rdquo;, quindi è sufficiente premere Invio quando viene richiesta una password.</p>
<p>Come possiamo vedere, il prompt diventa verde e indica che siamo root!</p>
<p>Dato che ora abbiamo i privilegi di root siamo in grado di fare praticamente qualsiasi cosa. Digitiamo <code>cat /etc/shadow</code> per vedere se riusciamo a recuperare gli hash delle password nella cartella <strong>/etc/shadow</strong>.</p>
<p><img src="/uploads/2021/root_7.png" alt=""></p>
<p>Ed ecco che siamo riusciti a ottenere tutti gli account e i loro hash delle password! Se necessario, potremmo scoprirle attraverso un attacco brute-force come <strong>hashcat</strong> per recuperare le password in chiaro.</p>
<p>È probabile che il file di configurazione per Automation Server sia nella directory <strong>/etc</strong>. Entriamo in questa cartella ed elenchiamo tutti i file e le directory.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>root:&gt; cd /etc
</span></span><span style="display:flex;"><span>root:&gt; ls -l
</span></span></code></pre></div><p><img src="/uploads/2021/root_8.png" alt=""></p>
<p>Se scorriamo questo elenco troviamo un file chiamato &ldquo;whitelist.rules&rdquo;, che probabilmente contiene le regole per la connessione al server. Apriamolo.</p>
<pre tabindex="0"><code>root:&gt; cat whitelist.rules
</code></pre><p><img src="/uploads/2021/root_9.png" alt=""></p>
<p>L&rsquo;amministratore di sistema non ha mai impostato &ldquo;whitelist.rules&rdquo; su questo server e, di conseguenza, chiunque può connettersi.</p>
<p>Infine, poiché abbiamo i privilegi di root possiamo aggiungere un nuovo utente che possano fare da backdoor. Prima di partire, posso aggiungermi agli utenti, concedermi i privilegi di root e aggiungermi a whitelist.rules, in modo che anche se l&rsquo;amministratore dovesse correggere questa vulnerabilità avrò comunque un account e potrò accedere ancora a questo server.</p>
<pre tabindex="0"><code>root:&gt; useradd cyberhood
</code></pre><p>Questo esempio risale alle vulnerabilità scoperte nel 2016 e riconosciute da Schneider Electric, che successivamente ha aggiornato i propri sistemi al fine di impedire un accesso così facile al server. Maggiori informazioni le puoi <a href="https://download.schneider-electric.com/files?p_Doc_Ref=SEVD-2016-025-01">trovare qui</a>.</p>
<p><strong>N.B.</strong> Lo scopo di questa guida non è certo quello di screditare un produttore a discapito di un altro, ma vuole unicamente evidenziare quanto lavoro ci sia da fare sui <strong>prodotti OT di tutti i principali produttori</strong> al fine di renderli &ldquo;<strong>secure by design</strong>&rdquo;, progettati e costruiti con criteri di sicurezza intrinseca.</p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far comprendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Hacking: trovare SCADA in rete usando Google Dorks</title>
            <link>https://www.omarmorando.com/posts/2021/07/hacking-trovare-scada-in-rete-usando-google-dorks/</link>
            <pubDate>Sat, 03 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/hacking-trovare-scada-in-rete-usando-google-dorks/</guid>
            <description>Si stima che Google abbia archiviato più pagine di un qualsiasi altro motore di ricerca del mondo. Con oltre miliardi di pagine e un tempo relativamente basso di esecuzione, il popolare motore di ricerca californiano riesce a soddisfare tutte le ricerche, sia eseguite per fini di curiosità sia per scopi meno innoqui.
Il motore di ricerca è così potente da poter categorizzare oltre 15 milioni di pagine in meno di un minuto.</description>
            <content type="html"><![CDATA[<p>Si stima che Google abbia archiviato più pagine di un qualsiasi altro motore di ricerca del mondo. Con oltre miliardi di pagine e un tempo relativamente basso di esecuzione, il popolare motore di ricerca californiano riesce a soddisfare tutte le ricerche, sia eseguite per fini di curiosità sia per scopi meno innoqui.</p>
<p>Il motore di ricerca è così potente da poter categorizzare oltre 15 milioni di pagine in meno di un minuto.</p>
<p>Oltre a ciò, si ipotizza che ogni secondo siano condotte oltre 60 mila ricerche attraverso motore di ricerca Google. Questo significa oltre <strong>1.000 miliardi</strong> di ricerche all’anno! Numeri astronomici a cui Google riesce a stare dietro con l’enorme infrastruttura che ha realizzato.</p>
<p>Sicuramente i motori di ricerca hanno stravolto la vita di molte persone; avere così tante informazioni nel giro di 1 minuto è un punto di riflessione per chiunque. Ma la cosa più sorprendente, nonostante questi numero, è che sfruttiamo una parcentuale minima delle potenzialità che questo strumento ci offre.</p>
<p>Poche persone sanno che Google ha un linguaggio proprietario per estrarre tali informazioni oltre a cercare tramite parole chiave. Anche solo con una scarsa conoscenza delle parole chiave di Google, puoi trovare molte più informazioni di quanto tu abbia mai immaginato.Vediamone alcune.</p>
<h2 id="cosa-sono-le-google-dorks">Cosa sono le Google Dorks</h2>
<p>Le dork vengono definite come query di ricerca che, anzichè contenere semplicemente la descrizione di ciò che stiamo cercando, sono composte anche da diverse keywods che permettono di affinare i parametri della ricerca stessa, al fine di ottenere dei risultati specifici.</p>
<h3 id="scopi-per-cui-vengono-utilizzate">Scopi per cui vengono utilizzate</h3>
<p>Come detto, le dorks vengono utilizzate principalmente per affinare i risultati di ricerca, al fine di avere un elenco di links più specifici.</p>
<p>Come esempio molto semplice, proviamo ad eseguire la ricerca sulla &ldquo;pizza napoletana&rdquo;. La semplice parola &ldquo;pizza&rdquo;, cercata su Google, ha oltre 1.360.000.000 di risultati, mentre combinata con la parola &ldquo;napoletana&rdquo; i risultati scendono drasticamente (ne rimangono comunque più di 15 milioni&hellip;). Questa è già un tentativo di affinare la nostra ricerca per restringere il campo di ricerca.</p>
<p>Partendo dal presupposto che alcuni sysadmin potrebbero non aver applicato alcune regole, è possibile cercare alcuni file riservati e/o confidenziali, non destinati al grande pubblico di Internet. Attenzione però: sebbene alcuni webmaster espongano informazioni sensibili per conto proprio, questo non significa che sia legale sfruttarle al fine di ottenerne un vantaggio (economico o non). La semplice consultazione non è reato, ma lo sfruttamento sì ed è perseeguito penalmente. È abbastanza facile tracciare l’IP di navigazione, anche se si utilizza un servizio VPN. Non è così anscarsa conoscenza delle parole chiave di Google, puoi trovare più informazioni di quanto tu abbia mai immaginato.onimo come si pensa.</p>
<p>Molte vulnerabilità vengono cercate da <strong>script kiddies</strong> proprio tramite Google. Un’attenta query infatti cerca per messaggi di errori, file di configurazione o altro che potrebbero in qualche modo esporre all’esterno versione del software o dati riservati.</p>
<h3 id="alcune-dorks-di-esempio">Alcune dorks di esempio</h3>
<table>
<thead>
<tr>
<th>Nome dorks</th>
<th>Descrizione</th>
<th>Esempio</th>
</tr>
</thead>
<tbody>
<tr>
<td>site:<em>domain</em></td>
<td>i risultati saranno file e pagine presenti nel dominio domain</td>
<td>site:w3school.com</td>
</tr>
<tr>
<td>intitle:<em>parola</em></td>
<td>i risultati conterranno nel titolo la parola dopo la dork “intitle”</td>
<td>intitle:hi</td>
</tr>
<tr>
<td>inurl:<em>parola</em></td>
<td>i risultati conterranno nel titolo la parola dopo la dork “inurl”</td>
<td>inurl:gallery</td>
</tr>
<tr>
<td>intext:<em>testo</em></td>
<td>i risultati conterranno pagine con il &ldquo;testo&rdquo; ricercato</td>
<td>intext:&ldquo;Index of&rdquo;</td>
</tr>
<tr>
<td>ext:<em>estensione</em></td>
<td>i risultati conterranno files con l&rsquo;estensione richiesta</td>
<td>ext:jpg</td>
</tr>
<tr>
<td>filetype:<em>type</em></td>
<td>i risultati conterranno file della estensione specificata da type</td>
<td>filetype:pdf</td>
</tr>
<tr>
<td>cache:<em>url</em></td>
<td>reindirizza l’utente alla cache Google dell’url specificato</td>
<td>cache:cyberhood.eu</td>
</tr>
<tr>
<td>info:<em>root_domain</em></td>
<td>il risultato conterrà il dominio principale (root domain) e tutte le informazioni relative</td>
<td>info:amazon.com</td>
</tr>
</tbody>
</table>
<p>Va detto che le dorks possono essere concatenate in modo da affinare ulteriormente la nostra ricerca, come ad esempio <code>ext:ini intext:env.ini</code> oppure <code>ext:mdb inurl:*.mdb inurl:fpdb shop.mdb</code> .</p>
<h2 id="google-dorks-per-gli-scada">Google Dorks per gli SCADA</h2>
<p>Va detto che non esiste una singola dork di Google che rivelerà ogni interfaccia SCADA esistente in rete, questo perchè dipende molto dal produttore e dai prodotti utilizzati. Ogni azienda crea i propri sistemi embedded con caratteristiche proprietarie. Condividono protocolli e procedure comuni, ma in generale sono oggetti unici.</p>
<p>Alcuni dei principali produttori sono: Siemens, Schneider Electric, Rockwell Automation, GE. Oltre a questo, va considerato che ognuna di queste aziende produce più prodotti appartenenti alla stessa famiglia, per cui la ricerca richiede che vengano sviluppate delle Google Dorks specifiche per ciascuno di essi. Di seguito una breve sintesi di alcune delle principali marche e relative queries.</p>
<p><img src="/uploads/2021/dorks_1.png" alt=""></p>
<h3 id="uso-delle-google-dorks">Uso delle Google Dorks</h3>
<p>Ora che abbiamo le idee un po&rsquo; più chiare, almeno lo spero, proviamo ad eseguire alcune dorks per trovare specifici sistemi SCADA. Cominciamo con uno dei prodotti più diffusi in Italia negli impianti di automazione: il PLC della serie S7 di Siemens. Come nota, ti ricordo che è la stessa famiglia di controller che sono stati il bersaglio del famigerato attacco Stuxnet contro la centrale nucleare iraniana di Natanz nel 2010, probabilmente il più sofisticato attacco SCADA al momento  mai realizzato.</p>
<p>La nostra Google Dork è composta in questo modo: <code>inurl:/Portal/Portal.mwsl</code></p>
<p>Quando la utilizziamo in una ricerca di Google, otteniamo i risultati visualizzati di seguito.</p>
<p><img src="/uploads/2021/dorks_2.png" alt=""></p>
<p>Se selezioniamo la prima voce dell&rsquo;elenco (Siemens S7-1200_1) accediamo alla pagina seguente:</p>
<p><img src="/uploads/2021/dorks_3.png" alt=""></p>
<p>Questo sembra essere il portale di amministrazione del PLC Siemens S7 da qualche parte nel mondo. Per proseguire la nostra ricerca, inseriamo l&rsquo;indirizzo IP che Google ci ha fornito (78.218.196.95) in Shodan per vedere dove si trovi. E&rsquo; a Bruyères in Francia.</p>
<p><img src="/uploads/2021/shodan_siemens_1.png" alt=""></p>
<p>Quando si fa clic sulla scheda &ldquo;<strong>Identification</strong>&rdquo; a sinistra, il PLC si identifica come una stazione S7-1200_1/PLC_1. Inoltre ci fornisce il numero di serie e la versione del firmware (così ci semplifica un eventuale attacco).</p>
<p><img src="/uploads/2021/shodan_siemens_2.png" alt=""></p>
<p>La stessa cosa succede se selezioniamo la voce &ldquo;<strong>Communication</strong>&rdquo; sempre dal menù a sinistra.</p>
<p><img src="/uploads/2021/shodan_siemens_3.png" alt=""></p>
<p>Come possiamo vedere, la sicurezza dei sistemi ICS è ancora agli inizi, basandosi principalmente sulla sicurezza per oscurità. Queste semplici Google Dorks espongono in modo fin troppo facile degli impianti spesso critici senza il minimo criterio di sicurezza. Anche un hacker con abilità rudimentali può accedere ai sistemi di controllo e provocare il caos.</p>
<h2 id="nota-importante"><strong>Nota importante</strong></h2>
<p>Lo scopo di questo articolo è unicamente didattico e informativo. <strong>Ogni azione non autorizzata</strong> verso qualunque sistema di controllo presente su una rete pubblica o privata <strong>è illegale</strong>! Le informazioni contenute in questo ed altri articoli hanno lo scopo di far comprendere quanto sia necessario migliorare i sistemi di difesa, e non di fornire strumenti per effettuarne l&rsquo;attacco. Violare un sistema informatico è perseguibile penalmente e può causare gravi danni a cose e persone, in modo particolare se si parla di ICS. Tutti i test che vengono illustrati nei tutorials sono stati effettuati in laboratori isolati, sicuri, o autorizzati dal produttore.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>La sicurezza industriale</title>
            <link>https://www.omarmorando.com/posts/2021/07/la-sicurezza-industriale/</link>
            <pubDate>Fri, 02 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/la-sicurezza-industriale/</guid>
            <description>La sicurezza informatica industriale è sempre stata una sfida. Per quanto già complessa in sè, la pandemia che stiamo affrontando nel 2020 complicato ulteriomente le cose. Secondo il recente rapporto dell&amp;rsquo;ARC Advisory Group, il numero di lavoratori remoti tra le organizzazioni industriali è aumentato del 53%, creando attività aggiuntive per i professionisti IT e OT. Allo stesso tempo, solo circa un quarto delle società industriali ha sviluppato un piano strategico di risposta agli incidenti.</description>
            <content type="html"><![CDATA[<p><img src="/uploads/2021/sicurezza_ot_1.png" alt=""></p>
<p>La sicurezza informatica industriale è sempre stata una sfida. Per quanto già complessa in sè, la pandemia che stiamo affrontando nel 2020 complicato ulteriomente le cose. Secondo il recente rapporto dell&rsquo;ARC Advisory Group, il numero di lavoratori remoti tra le organizzazioni industriali è aumentato del 53%, creando attività aggiuntive per i professionisti IT e OT. Allo stesso tempo, solo circa un quarto delle società industriali ha sviluppato un piano strategico di risposta agli incidenti.</p>
<p><img src="/uploads/2021/sicurezza_ot_2.png" alt=""></p>
<p>Mentre alcune delle grandi imprese industriali possono avere budget sufficienti e professionisti competenti per affrontare in modo efficacie un progetto di sicurezza OT, altre sperimentano la mancanza di risorse. Secondo lo stesso rapporto, il 24% delle organizzazioni industriali ha riscontrato una riduzione del budget ICS. Il paradosso è che crescono le esigenze di accesso, che richiedono la visibilità da remoto delle aree più critiche delle loro infrastrutture industriali.</p>
<p><img src="/uploads/2021/sicurezza_ot_3.png" alt=""></p>
<h2 id="approccio-strutturato-alla-sicurezza-ot">Approccio strutturato alla sicurezza OT</h2>
<p>Ci sono buone notizie per le aziende, che stanno pensando a come affrontare il loro programma di sicurezza OT. Seguendo i 5 passaggi universali descritti di seguito, qualsiasi organizzazione industriale può riconoscere, strutturare e assegnare priorità alle proprie reali esigenze di sicurezza. Inoltre, può identificare le azioni più richieste con i budget e le risorse disponibili.</p>
<p><img src="/uploads/2021/sicurezza_ot_4.png" alt=""></p>
<h3 id="fase-1-conduzione-dellaudit-di-sicurezza">FASE 1. Conduzione dell&rsquo;audit di sicurezza</h3>
<p>Le aziende spesso sottovalutano l&rsquo;importanza della diagnostica della sicurezza informatica. Tuttavia, questo passaggio è fondamentale per le reti OT sensibili, poiché consente di ottenere visibilità attraverso i processi di sicurezza esistenti. Aiuta anche a identificare i problemi, impostare obiettivi di sicurezza adeguati e pianificare i passaggi successivi con fiducia. Acquisendo la comprensione di quali tecnologie sono realmente necessarie, è possibile spendere saggiamente il budget disponibile.</p>
<h3 id="fase-2-trovare-le-tecnologie-per-la-sicurezza">FASE 2. Trovare le tecnologie per la sicurezza</h3>
<p>Con l&rsquo;elevata diversità degli ambienti OT su più verticali industriali, potrebbe essere difficile trovare una singola tecnologia o un fornitore in grado di soddisfare tutti i requisiti di sicurezza OT del cliente. È più comune trovare una combinazione di tecnologie compatibili scalabili per le esigenze dell&rsquo;organizzazione industriale. Se non è disponibile una soluzione adeguata sul mercato, l&rsquo;opzione migliore può essere quella di cercare una tecnologia adatta tra grandi o piccoli fornitori di sicurezza o persino svilupparla da zero.</p>
<h3 id="fase-3-implementare-in-modo-adeguato-la-sicurezza">FASE 3. Implementare in modo adeguato la sicurezza</h3>
<p>La continuità dei processi industriali e la sicurezza umana e ambientale sono le massime priorità per le reti OT. Pertanto, le soluzioni di sicurezza OT devono essere attentamente implementate e configurate secondo gli standard di conformità locali e internazionali, che includono ISO/IEC 27001, NIST SP, ISA/IEC 62443, NERC CIP e altri standard di riferimento.</p>
<h3 id="fase-4-gestione-professionale-della-sicurezza">FASE 4. Gestione professionale della sicurezza</h3>
<p>La gestione della sicurezza OT può essere complessa, poiché copre più aree e richiede competenze di gestione della sicurezza diverse. Inoltre, l&rsquo;approccio alla sicurezza informatica delle reti IT e OT è diverso, portando alla carenza di professionisti della sicurezza tra le organizzazioni industriali. Le imprese industriali possono superare questa sfida ricoprendo ruoli di gestione della sicurezza e governando i progetti di sicurezza, internamente o con i servizi SOC in outsourcing. Il monitoraggio costante della sicurezza aiuta a riconoscere i modelli sospetti e rilevare incidenti di sicurezza e attacchi informatici nelle loro fasi iniziali.</p>
<h3 id="fase-5-formazione-continua-sulla-sicurezza">FASE 5. Formazione continua sulla sicurezza</h3>
<p>La sicurezza informatica è un&rsquo;area in costante sviluppo, che richiede il contributo di ogni dipendente all&rsquo;interno di un&rsquo;organizzazione industriale. La formazione sulla consapevolezza della sicurezza comune viene utilizzata per sviluppare capacità di sicurezza e sane abitudini quotidiane tra i team non IT e i manager di livello C. Allo stesso tempo, la formazione avanzata, che include la sicurezza OT dedicata, la Threat Intelligence e altri corsi avanzati, viene utilizzata per migliorare le competenze dei professionisti IT e della sicurezza OT, responsabili della protezione delle infrastrutture OT contro gli attacchi informatici.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
        <item>
            <title>Differenze tra IT e OT</title>
            <link>https://www.omarmorando.com/posts/2021/07/differenze-tra-it-e-ot/</link>
            <pubDate>Thu, 01 Jul 2021 15:09:35 +0200</pubDate>
            
            <guid>https://www.omarmorando.com/posts/2021/07/differenze-tra-it-e-ot/</guid>
            <description>Per coloro che provengono dal mondo IT la sicurezza informatica dei sistemi ICS può rappresentare un ostacolo inizialmente frustrante. Questo perchè le loro conoscenze sulle tecnologie e sulle modalità di lavoro sono molto diverse nei sistemi OT, a partire dagli obiettivi che questi due settori hanno.
Protezione dei dati vs. Protezione del processo Quando lavoriamo per proteggere i sistemi IT ci poniamo come obiettivo quello di proteggere i dati. Questi includono la proprietà intellettuale (IP), i numeri di carta di credito, le e-mail e le informazioni di identificazione personale (PII).</description>
            <content type="html"><![CDATA[<p>Per coloro che provengono dal mondo IT la sicurezza informatica dei sistemi ICS può rappresentare un ostacolo inizialmente frustrante. Questo perchè le loro conoscenze sulle tecnologie e sulle modalità di lavoro sono molto diverse nei sistemi OT, a partire dagli obiettivi che questi due settori hanno.</p>
<h3 id="protezione-dei-dati-vs-protezione-del-processo">Protezione dei dati vs. Protezione del processo</h3>
<p>Quando lavoriamo per proteggere i sistemi IT ci poniamo come obiettivo quello di proteggere i dati. Questi includono la proprietà intellettuale (IP), i numeri di carta di credito, le e-mail e le informazioni di identificazione personale (PII). Stiamo cercando di impedire all&rsquo;hacker di avere accesso a quello che, per un&rsquo;azienda, può rappresentare gran parte del proprio patrimonio.</p>
<p>Ciò contrasta nettamente con i sistemi ICS in cui il principale obiettivo è <strong>proteggere il processo</strong>. Essi sono concepiti per un&rsquo;elaborazione continua del ciclo di lavorazione, e non è solo per una questione economica. In alcuni casi, un arresto non previsto di un&rsquo;impianto può richiedere giorni, settimane o addirittura mesi per il suo riavvio, causando ingenti danni.</p>
<p>Basti pensare, ad esempio, a un sistema ICS che controlla la generazione e la distribuzione elettrica o agli impianti di acqua potabile e reflue, la cui interruzione può causare gravi problemi. Oltre al grande disagio si può incorrere in situazioni che mettono in pericolo la salute delle persone, sottolineando la necessità di proteggere il processo.</p>
<p><img src="/uploads/2021/differenze_1.jpg" alt=""></p>
<h3 id="tecnologie">Tecnologie</h3>
<p>Nei sistemi IT tradizionali siamo abituati a lavorare con protocolli come TCP, IP, UDP, DNS, DHCP, ecc. La maggior parte dei sistemi ICS utilizza uno degli oltre 100 protocolli dedicati, di cui alcuni proprietari. I più diffusi sul mercato sono Modbus, DNP3, ProfiNet/Profibus, OPC e altri ancora.</p>
<p>Un sistema ICS basa il proprio funzionamento operativo sul <em>Controllore a Logica Programmabile</em> o PLC. Questi sono utilizzati per quasi ogni tipo di sistema di controllo industriale, sia che si tratti di produzione, raffinazione del petrolio, trasmissione di elettricità, trattamento delle acque, ecc. I PLC sono comparabili a computer industriali, con un loro Sistema Operativo proprietario. Utilizzano linguaggi di programmazione che derivano dal mondo della logica elettromeccanica, come il Ladder Logic, per controllare sensori, attuatori, valvole, allarmi e altri dispositivi. L&rsquo;hacking dei sistemi ICS richiede spesso una conoscenza della programmazione di questi PLC.</p>
<p><img src="/uploads/2021/differenze_2.png" alt="PLC Schneider Electric serie compatta"></p>
<h3 id="requisiti-di-disponibilità">Requisiti di disponibilità</h3>
<p>Sebbene la <strong>disponibilità</strong> (CIA) sia un componente chiave della sicurezza IT tradizionale, i sistemi ICS la portano ad un altro livello. Come accennato in precedenza, stiamo proteggendo il processo, piuttosto che i dati. Ciò significa che spesso l&rsquo;opzione di applicare una patch software e riavviare il sistema potrebbe NON essere un&rsquo;opzione se non a intervalli discreti, quali arresti di manutenzione annuali o trimestrali. Ciò può significare che il sistema operativo e le applicazioni possono rimanere privi di patch con vulnerabilità note per mesi, se non addirittura per anni. L&rsquo;ingegnere dei sistemi SCADA o PLC deve spesso optare per controlli compensativi per prevenire intrusioni, rispetto ad un approccio molto più rapido di un amministratore della sicurezza IT che sarebbe in grado di applicare delle patch a intervalli molto più rapidi.</p>
<h3 id="accesso-ai-componenti">Accesso ai componenti</h3>
<p>Con alcune eccezioni, nel tradizionale campo della sicurezza IT il tecnico della sicurezza ha accesso fisico diretto ai componenti del sistema. Nei sistemi ICS i componenti del sistema possono essere distribuiti su centinaia o migliaia di metri (es. condutture, rete elettrica, ecc.). Ciò può rendere difficile l&rsquo;implementazione dei controlli di sicurezza. Le stazioni remote in campo possono diventare un punto di accesso per l&rsquo;hacker all&rsquo;intero sistema ICS.</p>
<h3 id="sicurezza-attraverso-loscurità">Sicurezza attraverso l&rsquo;oscurità</h3>
<p>Negli ultimi tempi, e di recente col concetto di Industria 4.0, molti dei sistemi ICS sono stati progressivamente collegati a Internet tramite una connessione TCP/IP diretta. Sebbene la comunicazione interna possa essere ancora gestita con reti proprietarie, l&rsquo;accesso remoto consente un monitoraggio continuo da parte dei responsabili degli impianti. Rimangono comunque delle eccezioni, come ad esempio alcune dighe e altri sistemi di infrastrutture pubbliche che rimangono off-line per proteggerli dagli aggressori.</p>
<p><img src="/uploads/2021/differenze_3.png" alt="Sicurezza ottenuta tramite una protezione &ldquo;air gap&rdquo;"></p>
<p>Per anni questi sistemi hanno beneficiato della <strong>sicurezza attraverso l&rsquo;oscurità</strong>. In altre parole, erano al sicuro perché poche persone sapevano della loro esistenza e ancora meno capivano le loro tecnologie. I protocolli utilizzati erano noti solo a tecnici del settore, a chi aveva avuto modo di acquisire esperienza diretta lavorando a stretto contatto con SCADA, PLC e terminali HMI.</p>
<p>Questo sta diventando il loro punto debole, perchè oggi sono esposti in rete senza che siano state implementate le misure di sicurezza più elementari. Un esempio è ciò che è accaduto nel 2016 ad opera del ricercatore indipendente Karn Ganeshen che è riuscito a entrare in un sistema di <a href="https://download.schneider-electric.com/files?p_Doc_Ref=SEVD-2016-025-01">Building Automation di Schneider Electric</a> sfruttando una vulnerabilità 0-day e ottenendo un accesso <strong>root</strong> al server.</p>
<p>Con l&rsquo;avvento di strumenti come <a href="https://www.shodan.io/">Shodan</a> e di altri strumenti di ricognizione questi sistemi non possono più fare affidamento sulla sicurezza attraverso l&rsquo;oscurità. L&rsquo;industria sta iniziando solo ora ad attuare misure di sicurezza modeste. Una delle sfide più grandi è che molti prodotti di sicurezza standard IT non garantisco lo stesso livello di protezione con i protocolli industriali. Nella maggior parte dei casi occorre personalizzare i firewall e gli IDS per renderli compatibili ed applicabili all&rsquo;OT.</p>
<p>Di fronte alla minaccia del cyber terrorismo e della guerra cibernetica la protezione dei sistemi ICS è cruciale. A partire dal 2010 sono diventati i primi bersagli presi di mira non solo da hacker criminali ma anche da governi, come nel caso di <a href="https://it.wikipedia.org/wiki/Stuxnet">Stuxnet</a> o del targeting Russo del sistema elettrico Ucraino durante il loro conflitto.</p>
<p>Stay safe, stay free.</p>
]]></content>
        </item>
        
    </channel>
</rss>
