<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SCADAsploit on Omar Morando</title>
    <link>https://www.omarmorando.com/tags/scadasploit/</link>
    <description>Recent content in SCADAsploit on Omar Morando</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 22 Apr 2022 15:09:35 +0200</lastBuildDate><atom:link href="https://www.omarmorando.com/tags/scadasploit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modulo SCADAsploit: Modbus Payload Transfer</title>
      <link>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-payload-transfer/</link>
      <pubDate>Fri, 22 Apr 2022 15:09:35 +0200</pubDate>
      
      <guid>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-payload-transfer/</guid>
      <description>Il secondo modulo che andiamo ad esplorare si chiama &amp;ldquo;Modbus Payload Transfer&amp;rdquo; e appartiene alla categoria degli auxiliary.
A cosa serve Il modulo &amp;ldquo;Modbus Payload Transfer&amp;rdquo; è uno script che permette di memorizzare e recuperare un payload/shellcode negli &amp;ldquo;holding registers&amp;rdquo; di un PLC tramite il protocollo Modbus TCP. Esistono numerosissimi PLC esposti a Internet, con questo modulo è possibile sfruttare la loro memoria per fare un upload di un payload (shellcode/malware) in modo che possa essere recuperato in un secondo momento.</description>
    </item>
    
    <item>
      <title>Modulo SCADAsploit: Modbus Scan</title>
      <link>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-scan/</link>
      <pubDate>Sun, 17 Apr 2022 15:09:35 +0200</pubDate>
      
      <guid>https://www.omarmorando.com/posts/2022/04/modulo-scadasploit-modbus-scan/</guid>
      <description>Iniziamo a conoscere un po&#39; meglio ScadaSploit partendo da uno dei moduli ausiliari presenti: Modbus Scan.
Posizioniamoci nella cartella dove abbiamo installato ScadaSploit e avviamolo tramite il comando $ ./scadasploit.py. Seguendo la stessa filosofia di approccio di Metasploit, possiamo cercare tutti i moduli che contengono una parola chiave usando il comando search &amp;lt;keyword&amp;gt; oppure visualizzare l&amp;rsquo;elenco completo dei moduli presenti con il comando show modules.
Nel nostro caso useremo search modbus per individuare i moduli di ScadaSploit che possono aiutarci durante il nostro lavoro di pentesting su una rete Modbus TCP.</description>
    </item>
    
    <item>
      <title>SCADAsploit Framework</title>
      <link>https://www.omarmorando.com/posts/2022/04/scadasploit-framework/</link>
      <pubDate>Thu, 14 Apr 2022 15:09:35 +0200</pubDate>
      
      <guid>https://www.omarmorando.com/posts/2022/04/scadasploit-framework/</guid>
      <description>Questa sezione è dedicata a SCADAsploit, un framework su cui sto lavorando dedicato al penetration testing in ambito OT/ICS. Vi chiederete: &amp;ldquo;Ma non c&amp;rsquo;è già Metasploit che lo fa?&amp;rdquo;. Certo! E allora che bisogno c&amp;rsquo;è di creare un nuovo tool del genere? Provo a dare qualche risposta:
 framework esclusivamente dedicato alle vulnerabilità di SCADA, PLC e altri dispositivi ICS scritto in Python, sia il core del framework sia i moduli aggiuntivi interfaccia &amp;ldquo;Metasploit like&amp;rdquo; basata su Sploitkit focus maggiore su parco PLC installato, specialmente europeo open source.</description>
    </item>
    
  </channel>
</rss>
